---
http_interactions:
- request:
    method: get
    uri: https://csrc.nist.gov/publications/search?dateFrom-lg=01/01/2018&dateTo-lg=12/31/2018&keywords-lg=NISTIR%208200&status-lg=Final,Withdrawn
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache, no-store, must-revalidate
      Pragma:
      - no-cache
      Content-Type:
      - text/html; charset=utf-8
      Expires:
      - "-1"
      Server:
      - Microsoft-IIS/8.5
      Set-Cookie:
      - ASP.NET_SessionId=lgbsq4vcn2vqsswtz4lt0kwp; path=/; secure; HttpOnly
      - CMSCsrfCookie=8JJPlL+kZqGyTq86gDTgn++97tIS4dsNI/mrUYct; path=/; secure; HttpOnly
      - CMSPreferredCulture=en-US; path=/; HttpOnly; Secure
      X-Frame-Options:
      - SAMEORIGIN
      X-Ua-Compatible:
      - IE=Edge
      X-Aspnet-Version:
      - 4.0.30319
      Date:
      - Fri, 31 May 2019 11:45:26 GMT
      Content-Length:
      - '115014'
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 31 May 2019 11:45:29 GMT
- request:
    method: get
    uri: https://csrc.nist.gov/publications/detail/nistir/8200/draft
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - csrc.nist.gov
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache, no-store, must-revalidate
      Pragma:
      - no-cache
      Content-Type:
      - text/html; charset=utf-8
      Expires:
      - "-1"
      Server:
      - Microsoft-IIS/8.5
      Set-Cookie:
      - ASP.NET_SessionId=4lr5bmobrmxoufyciqxla2k2; path=/; secure; HttpOnly
      - CMSCsrfCookie=mCt5ChdY36Wln0iaU27nujHxdLVgbPGLk9EgPczU; path=/; secure; HttpOnly
      - CMSPreferredCulture=en-US; path=/; HttpOnly; Secure
      X-Frame-Options:
      - SAMEORIGIN
      X-Ua-Compatible:
      - IE=Edge
      X-Aspnet-Version:
      - 4.0.30319
      Date:
      - Fri, 31 May 2019 11:45:27 GMT
      Content-Length:
      - '48581'
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 31 May 2019 11:45:30 GMT
- request:
    method: get
    uri: https://csrc.nist.gov/publications/detail/nistir/8200/final
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - csrc.nist.gov
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache, no-store, must-revalidate
      Pragma:
      - no-cache
      Content-Type:
      - text/html; charset=utf-8
      Expires:
      - "-1"
      Server:
      - Microsoft-IIS/8.5
      Set-Cookie:
      - ASP.NET_SessionId=kuae45wykw3ukd3421tlk5gb; path=/; secure; HttpOnly
      - CMSCsrfCookie=19ia3WlSvrifl/hUT+L8HZ8WDV60OVcaVici6u3u; path=/; secure; HttpOnly
      - CMSPreferredCulture=en-US; path=/; HttpOnly; Secure
      X-Frame-Options:
      - SAMEORIGIN
      X-Ua-Compatible:
      - IE=Edge
      X-Aspnet-Version:
      - 4.0.30319
      Date:
      - Fri, 31 May 2019 11:45:27 GMT
      Content-Length:
      - '45332'
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 31 May 2019 11:45:30 GMT
recorded_with: VCR 5.0.0
