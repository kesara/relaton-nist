---
http_interactions:
- request:
    method: get
    uri: https://csrc.nist.gov/publications/search?keywords-lg=NISTIR%208204&status-lg=Final,Withdrawn
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache, no-store, must-revalidate
      Pragma:
      - no-cache
      Content-Type:
      - text/html; charset=utf-8
      Expires:
      - "-1"
      Server:
      - Microsoft-IIS/8.5
      Set-Cookie:
      - ASP.NET_SessionId=1arduot1z4vlihdk54eo4dau; path=/; secure; HttpOnly; SameSite=Lax
      - CMSCsrfCookie=uwY4bX/tMsgJF2Ym0lGHQyR2nEKXi1SiU9U29Ynx; path=/; secure; HttpOnly
      - CMSPreferredCulture=en-US; path=/; HttpOnly; Secure
      X-Frame-Options:
      - SAMEORIGIN
      X-Ua-Compatible:
      - IE=Edge
      X-Aspnet-Version:
      - 4.0.30319
      Content-Security-Policy:
      - frame-ancestors 'self';
      Date:
      - Wed, 15 Jan 2020 20:06:46 GMT
      Content-Length:
      - '142103'
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 15 Jan 2020 20:06:46 GMT
- request:
    method: get
    uri: https://csrc.nist.gov/publications/detail/nistir/8204/archive/2019-04-26
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - csrc.nist.gov
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache, no-store, must-revalidate
      Pragma:
      - no-cache
      Content-Type:
      - text/html; charset=utf-8
      Expires:
      - "-1"
      Server:
      - Microsoft-IIS/8.5
      Set-Cookie:
      - ASP.NET_SessionId=lpxskxrjyfexmb134eiy3yhh; path=/; secure; HttpOnly; SameSite=Lax
      - CMSCsrfCookie=Fc6+dLt1O9DtcdF+P/c7dmfAqb3pn8ZRObMrdbvc; path=/; secure; HttpOnly
      - CMSPreferredCulture=en-US; path=/; HttpOnly; Secure
      X-Frame-Options:
      - SAMEORIGIN
      X-Ua-Compatible:
      - IE=Edge
      X-Aspnet-Version:
      - 4.0.30319
      Content-Security-Policy:
      - frame-ancestors 'self';
      Date:
      - Wed, 15 Jan 2020 20:06:48 GMT
      Content-Length:
      - '40893'
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+DQo8aHRtbCAgPg0KPGhlYWQgaWQ9ImhlYWQiPjx0aXRsZT4NCglOSVNUSVIgODIwNCwgQ3liZXJzZWN1cml0eSBGcmFtZXdvcmsgT0xJUiBTdWJtaXNzaW9ucyBUZW1wbGF0ZSB8IENTUkMNCjwvdGl0bGU+PG1ldGEgY2hhcnNldD0iVVRGLTgiIC8+IAo8bWV0YSBodHRwLWVxdWl2PSJjb250ZW50LXR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD1VVEYtOCIgLz4NCjxtZXRhIGh0dHAtZXF1aXY9ImNvbnRlbnQtc3R5bGUtdHlwZSIgY29udGVudD0idGV4dC9jc3MiIC8+DQo8bWV0YSBodHRwLWVxdWl2PSJjb250ZW50LXNjcmlwdC10eXBlIiBjb250ZW50PSJ0ZXh0L2phdmFzY3JpcHQiIC8+DQo8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMCIgLz4NCg0KPGxpbmsgaHJlZj0iL1NjcmlwdHMvZm9udC1hd2Vzb21lL2Nzcy9mb250LWF3ZXNvbWUuY3NzIiB0eXBlPSJ0ZXh0L2NzcyIgcmVsPSJzdHlsZXNoZWV0IiAvPg0KPGxpbmsgaHJlZj0iL0NTUkMvbWVkaWEvYm9vdHN0cmFwL2Nzcy9ib290c3RyYXAubWluLmNzcyIgdHlwZT0idGV4dC9jc3MiIHJlbD0ic3R5bGVzaGVldCIgLz4NCjxsaW5rIGhyZWY9Ii9DU1JDL21lZGlhL2Jvb3RzdHJhcC9jc3MvYm9vdHN0cmFwLXRoZW1lLm1pbi5jc3MiIHR5cGU9InRleHQvY3NzIiByZWw9InN0eWxlc2hlZXQiIC8+DQo8bGluayBocmVmPSIvU2NyaXB0cy9lb25hc2Rhbi1ib290c3RyYXAtZGF0ZXRpbWVwaWNrZXIvYnVpbGQvY3NzL2Jvb3RzdHJhcC1kYXRldGltZXBpY2tlci5taW4uY3NzIiB0eXBlPSJ0ZXh0L2NzcyIgcmVsPSJzdHlsZXNoZWV0IiAvPg0KPGxpbmsgaHJlZj0iL0NTUkMvbWVkaWEvY3NzL25pc3QtZm9udHMuY3NzIiB0eXBlPSJ0ZXh0L2NzcyIgcmVsPSJzdHlsZXNoZWV0IiAvPg0KPGxpbmsgaHJlZj0iL0NTUkMvbWVkaWEvY3NzL2NzcmMtc3R5bGUuY3NzIiB0eXBlPSJ0ZXh0L2NzcyIgcmVsPSJzdHlsZXNoZWV0IiAvPg0KPGxpbmsgaHJlZj0iL0NTUkMvbWVkaWEvY3NzL21lZGlhLXJlc2l6ZS5jc3MiIHR5cGU9InRleHQvY3NzIiByZWw9InN0eWxlc2hlZXQiIC8+DQoNCg0KPGxpbmsgcmVsPSJhcHBsZS10b3VjaC1pY29uIiBzaXplcz0iMTgweDE4MCIgaHJlZj0iL0NTUkMvTWVkaWEvaW1hZ2VzL2Zhdmljb25zL2FwcGxlLXRvdWNoLWljb24ucG5nIiAvPg0KPGxpbmsgcmVsPSJpY29uIiB0eXBlPSJpbWFnZS9wbmciIGhyZWY9Ii9DU1JDL01lZGlhL2ltYWdlcy9mYXZpY29ucy9mYXZpY29uLTMyeDMyLnBuZyIgc2l6ZXM9IjMyeDMyIiAvPg0KPGxpbmsgcmVsPSJpY29uIiB0eXBlPSJpbWFnZS9wbmciIGhyZWY9Ii9DU1JDL01lZGlhL2ltYWdlcy9mYXZpY29ucy9mYXZpY29uLTE2eDE2LnBuZyIgc2l6ZXM9IjE2eDE2IiAvPg0KPGxpbmsgcmVsPSJtYW5pZmVzdCIgaHJlZj0iL0NTUkMvTWVkaWEvaW1hZ2VzL2Zhdmljb25zL21hbmlmZXN0Lmpzb24iIC8+DQo8bGluayByZWw9Im1hc2staWNvbiIgaHJlZj0iL0NTUkMvTWVkaWEvaW1hZ2VzL2Zhdmljb25zL3NhZmFyaS1waW5uZWQtdGFiLnN2ZyIgY29sb3I9IiMwMDAwMDAiIC8+DQo8bWV0YSBuYW1lPSJtc2FwcGxpY2F0aW9uLWNvbmZpZyIgY29udGVudD0iL0NTUkMvTWVkaWEvaW1hZ2VzL2Zhdmljb25zL2Jyb3dzZXJjb25maWcueG1sIiAvPg0KPG1ldGEgbmFtZT0idGhlbWUtY29sb3IiIGNvbnRlbnQ9IiMwMDAwMDAiIC8+DQoNCjxzY3JpcHQgc3JjPSIvU2NyaXB0cy9qcXVlcnkvZGlzdC9qcXVlcnkubWluLmpzIj48L3NjcmlwdD4NCjxzY3JpcHQgc3JjPSIvU2NyaXB0cy91bmRlcnNjb3JlL3VuZGVyc2NvcmUtbWluLmpzIj48L3NjcmlwdD4NCjxzY3JpcHQgc3JjPSIvU2NyaXB0cy9ib290c3RyYXAvZGlzdC9qcy9ib290c3RyYXAubWluLmpzIj48L3NjcmlwdD4NCjxzY3JpcHQgc3JjPSIvU2NyaXB0cy9tb21lbnQvbWluL21vbWVudC5taW4uanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+DQo8c2NyaXB0IHNyYz0iL1NjcmlwdHMvZW9uYXNkYW4tYm9vdHN0cmFwLWRhdGV0aW1lcGlja2VyL2J1aWxkL2pzL2Jvb3RzdHJhcC1kYXRldGltZXBpY2tlci5taW4uanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+DQo8c2NyaXB0IHNyYz0iL0NTUkMvbWVkaWEvanMvbWVnYW1lbnUuanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+DQo8c2NyaXB0IHNyYz0iL0NTUkMvbWVkaWEvanMvbWFpbi5qcyI+PC9zY3JpcHQ+DQo8c2NyaXB0IHNyYz0iL0NTUkMvbWVkaWEvanMvZm9ybXMuanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+DQo8c2NyaXB0IHNyYz0iL0NTUkMvbWVkaWEvanMvZm9ybXMtdG9waWNzLmpzIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pg0KPHNjcmlwdCBzcmM9Ii9DU1JDL21lZGlhL2pzL2Zvcm1zLWNvbnRyb2xGYW1pbGllcy5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4NCjxzY3JpcHQgc3JjPSIvQ1NSQy9tZWRpYS9qcy9mb3Jtcy1zZWFyY2hDcml0ZXJpYS5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4NCjxzY3JpcHQgc3JjPSIvQ1NSQy9tZWRpYS9qcy9uaXN0LWV4aXQtc2NyaXB0LmpzIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pg0KDQo8c2NyaXB0IGFzeW5jIHR5cGU9InRleHQvamF2YXNjcmlwdCIgaWQ9Il9mZWRfYW5fdWFfdGFnIiBzcmM9Imh0dHBzOi8vZGFwLmRpZ2l0YWxnb3YuZ292L1VuaXZlcnNhbC1GZWRlcmF0ZWQtQW5hbHl0aWNzLU1pbi5qcz9hZ2VuY3k9bmlzdCZzdWJhZ2VuY3k9Y3NyYyZwdWE9VUEtNjY2MTA2OTMtMTUmeXQ9dHJ1ZSZleHRzPXhzZCx4bWwsd2F2LG1wZyxtcGVnLGF2aSxydGYsd2VibSxvZ2csb2d2LG9nYSxtYXAsb3RmLGVvdCxzdmcsdHRmLHdvZmYiPjwvc2NyaXB0Pg0KDQo8c3R5bGUgaWQ9ImFudGlDbGlja2phY2siPmJvZHl7ZGlzcGxheTpub25lICFpbXBvcnRhbnQ7fTwvc3R5bGU+DQo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgaWQ9ImFudGlDbGlja2phY2tTY3JpcHQiPg0KICAgaWYgKHNlbGYgPT09IHRvcCkgew0KICAgICAgIHZhciBhbnRpQ2xpY2tqYWNrID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImFudGlDbGlja2phY2siKTsNCiAgICAgICBhbnRpQ2xpY2tqYWNrLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoYW50aUNsaWNramFjayk7DQogICB9IGVsc2Ugew0KICAgICAgIHRvcC5sb2NhdGlvbiA9IHNlbGYubG9jYXRpb247DQogICB9DQo8L3NjcmlwdD4NCiAKPGxpbmsgaHJlZj0iL0NTUkMvTWVkaWEvaW1hZ2VzL2Zhdmljb25zL2Zhdmljb24uaWNvIiB0eXBlPSJpbWFnZS94LWljb24iIHJlbD0ic2hvcnRjdXQgaWNvbiIvPg0KPGxpbmsgaHJlZj0iL0NTUkMvTWVkaWEvaW1hZ2VzL2Zhdmljb25zL2Zhdmljb24uaWNvIiB0eXBlPSJpbWFnZS94LWljb24iIHJlbD0iaWNvbiIvPg0KDQo8bWV0YSBkZXNjcmlwdGlvbj0iVGhpcyBkb2N1bWVudCBwcm92aWRlcyBpbnN0cnVjdGlvbnMgYW5kIGRlZmluaXRpb25zIGZvciBjb21wbGV0aW5nIHRoZSBDeWJlcnNlY3VyaXR5IEZyYW1ld29yayAoQ1NGKSBPbmxpbmUgSW5mb3JtYXRpdmUgUmVmZXJlbmNlcyAoT0xJUikgc3ByZWFkc2hlZXQgdGVtcGxhdGUgYXZhaWxhYmxlIGZvciBkb3dubG9hZCBhdCBodHRwczovL3d3dy5uaXN0Lmdvdi9jeWJlcmZyYW1ld29yay9pbmZvcm1hdGl2ZS1yZWZlcmVuY2VzLsKgIFRoaXMgZG9jdW1lbnQgaXMgaW50ZW5kZWQgdG8gYXNzaXN0IGRldmVsb3BlcnMgb2YgUmVmZXJlbmNlcyBhcyB0aGV5IGNvbXBsZXRlIHRoZSBzcHJlYWRzaGVldCB0ZW1wbGF0ZS4gRGVmaW5pdGlvbnMgYXJlIHByb3ZpZGVkIGZvciBjb2x1bW4gYW5kIHJvdyBoZWFkaW5ncyBpbiBhZGRpdGlvbiB0byBhIGRpc2N1c3Npb24gb2YgZXhwZWN0ZWQgdmFsdWVzLiIvPg0KPG1ldGEgbmFtZT0iZGN0ZXJtcy50aXRsZSIgY29udGVudD0iTklTVCBJbnRlcm5hbCBvciBJbnRlcmFnZW5jeSBSZXBvcnQgKE5JU1RJUikgODIwNCAoV2l0aGRyYXduKSwgQ3liZXJzZWN1cml0eSBGcmFtZXdvcmsgT25saW5lIEluZm9ybWF0aXZlIFJlZmVyZW5jZXMgKE9MSVIpIFN1Ym1pc3Npb25zOiBTcGVjaWZpY2F0aW9uIGZvciBDb21wbGV0aW5nIHRoZSBPTElSIFRlbXBsYXRlIi8+DQo8bWV0YSBuYW1lPSJkY3Rlcm1zLmRlc2NyaXB0aW9uIiBjb250ZW50PSJUaGlzIGRvY3VtZW50IHByb3ZpZGVzIGluc3RydWN0aW9ucyBhbmQgZGVmaW5pdGlvbnMgZm9yIGNvbXBsZXRpbmcgdGhlIEN5YmVyc2VjdXJpdHkgRnJhbWV3b3JrIChDU0YpIE9ubGluZSBJbmZvcm1hdGl2ZSBSZWZlcmVuY2VzIChPTElSKSBzcHJlYWRzaGVldCB0ZW1wbGF0ZSBhdmFpbGFibGUgZm9yIGRvd25sb2FkIGF0IGh0dHBzOi8vd3d3Lm5pc3QuZ292L2N5YmVyZnJhbWV3b3JrL2luZm9ybWF0aXZlLXJlZmVyZW5jZXMuwqAgVGhpcyBkb2N1bWVudCBpcyBpbnRlbmRlZCB0byBhc3Npc3QgZGV2ZWxvcGVycyBvZiBSZWZlcmVuY2VzIGFzIHRoZXkgY29tcGxldGUgdGhlIHNwcmVhZHNoZWV0IHRlbXBsYXRlLiBEZWZpbml0aW9ucyBhcmUgcHJvdmlkZWQgZm9yIGNvbHVtbiBhbmQgcm93IGhlYWRpbmdzIGluIGFkZGl0aW9uIHRvIGEgZGlzY3Vzc2lvbiBvZiBleHBlY3RlZCB2YWx1ZXMuIi8+DQoNCjwhLS1BdXRob3JzLS0+DQo8bWV0YSBuYW1lPSJkY3Rlcm1zLmNyZWF0b3IiIGNvbnRlbnQ9IkF1dGhvcjogTWF0dGhldyBCYXJyZXR0IChOSVNUKSIvPg0KPG1ldGEgbmFtZT0iZGN0ZXJtcy5jcmVhdG9yIiBjb250ZW50PSJBdXRob3I6IE5pY29sZSBLZWxsZXIgKE5JU1QpIi8+DQo8bWV0YSBuYW1lPSJkY3Rlcm1zLmNyZWF0b3IiIGNvbnRlbnQ9IkF1dGhvcjogU3RlcGhlbiBRdWlubiAoTklTVCkiLz4NCjxtZXRhIG5hbWU9ImRjdGVybXMuY3JlYXRvciIgY29udGVudD0iQXV0aG9yOiBNYXR0aGV3IFNtaXRoIChHMikiLz4NCg0KDQo8bWV0YSBuYW1lPSJkY3Rlcm1zLmRhdGUuY3JlYXRlZCIgc2NoZW1lPSJJU084NjAxIiBjb250ZW50PSIyMDE5LTA0LTI2Ii8+DQo8bWV0YSBuYW1lPSJkY3Rlcm1zLmlkZW50aWZpZXIiIGNvbnRlbnQ9Imh0dHBzOi8vY29udGVudC5jc3JjLmUxYS5uaXN0Lmdvdi9wdWJsaWNhdGlvbnMvZGV0YWlsL25pc3Rpci84MjA0L2FyY2hpdmUiLz4NCjxtZXRhIG5hbWU9ImRjdGVybXMubGFuZ3VhZ2UiIHNjaGVtZT0iRENURVJNUy5SRkMxNzY2IiBjb250ZW50PSJFTi1VUyIvPg0KDQo8IS0tR29vZ2xlIFNjaG9sYXIgSW5mby0tPg0KPG1ldGEgbmFtZT0iY2l0YXRpb25fdGl0bGUiIGNvbnRlbnQ9IkN5YmVyc2VjdXJpdHkgRnJhbWV3b3JrIE9ubGluZSBJbmZvcm1hdGl2ZSBSZWZlcmVuY2VzIChPTElSKSBTdWJtaXNzaW9uczogU3BlY2lmaWNhdGlvbiBmb3IgQ29tcGxldGluZyB0aGUgT0xJUiBUZW1wbGF0ZSIgLz4NCjxtZXRhIG5hbWU9ImNpdGF0aW9uX3B1YmxpY2F0aW9uX2RhdGUiIGNvbnRlbnQ9IjIwMTkvMDQvMjYiIC8+DQoNCjxtZXRhIG5hbWU9ImNpdGF0aW9uX3RlY2huaWNhbF9yZXBvcnRfbnVtYmVyIiBjb250ZW50PSJOSVNUIEludGVybmFsIG9yIEludGVyYWdlbmN5IFJlcG9ydCAoTklTVElSKSA4MjA0IChXaXRoZHJhd24pIiAvPg0KPG1ldGEgbmFtZT0iY2l0YXRpb25fdGVjaG5pY2FsX3JlcG9ydF9pbnN0aXR1dGlvbiIgY29udGVudD0iTmF0aW9uYWwgSW5zdGl0dXRlIG9mIFN0YW5kYXJkcyBhbmQgVGVjaG5vbG9neSIgLz4NCg0KDQo8bWV0YSBuYW1lPSJjaXRhdGlvbl9rZXl3b3JkcyIgY29udGVudD0iY3Jvc3N3YWxrOyBDeWJlcnNlY3VyaXR5IEZyYW1ld29yazsgSW5mb3JtYXRpdmUgUmVmZXJlbmNlczsgRnJhbWV3b3JrIGZvciBJbXByb3ZpbmcgQ3JpdGljYWwgSW5mcmFzdHJ1Y3R1cmUgQ3liZXJzZWN1cml0eTsgbWFwcGluZzsgT25saW5lIEluZm9ybWF0aXZlIFJlZmVyZW5jZXM7ICIgLz4NCjxtZXRhIG5hbWU9ImNpdGF0aW9uX2xhbmd1YWdlIiBjb250ZW50PSJlbiIgLz4NCjxtZXRhIG5hbWU9ImNpdGF0aW9uX3BkZl91cmwiIGNvbnRlbnQ9Imh0dHBzOi8vY3NyYy5uaXN0Lmdvdi9DU1JDL21lZGlhL1B1YmxpY2F0aW9ucy9uaXN0aXIvODIwNC9hcmNoaXZlLzIwMTktMDQtMjYvZG9jdW1lbnRzL05JU1QuSVIuODIwNC0yMDE5MDQyNi5wZGYiIC8+DQo8bWV0YSBuYW1lPSJjaXRhdGlvbl9hYnN0cmFjdF9odG1sX3VybCIgY29udGVudD0iaHR0cHM6Ly9jc3JjLm5pc3QuZ292L3B1YmxpY2F0aW9ucy9kZXRhaWwvbmlzdGlyLzgyMDQvYXJjaGl2ZS8yMDE5LTA0LTI2IiAvPg0KDQoNCjwhLS1Hb29nbGUgU2Nob2xhciBBdXRob3JzLS0+DQoNCjxtZXRhIG5hbWU9ImNpdGF0aW9uX2F1dGhvciIgY29udGVudD0iQmFycmV0dCwgTWF0dGhldyIgLz4NCjxtZXRhIG5hbWU9ImNpdGF0aW9uX2F1dGhvciIgY29udGVudD0iS2VsbGVyLCBOaWNvbGUiIC8+DQo8bWV0YSBuYW1lPSJjaXRhdGlvbl9hdXRob3IiIGNvbnRlbnQ9IlF1aW5uLCBTdGVwaGVuIiAvPg0KPG1ldGEgbmFtZT0iY2l0YXRpb25fYXV0aG9yIiBjb250ZW50PSJTbWl0aCwgTWF0dGhldyIgLz4NCg0KDQo8IS0tIEZhY2Vib29rIE9wZW5HcmFwaCAtLT4NCjxtZXRhIG5hbWU9Im9nOnNpdGVfbmFtZSIgY29udGVudD0iQ1NSQyB8IE5JU1QiIC8+DQo8bWV0YSBuYW1lPSJvZzp0eXBlIiBjb250ZW50PSJhcnRpY2xlIiAvPg0KPG1ldGEgbmFtZT0ib2c6dXJsIiBjb250ZW50PSJodHRwczovL2NzcmMubmlzdC5nb3YvcHVibGljYXRpb25zL2RldGFpbC9uaXN0aXIvODIwNC9hcmNoaXZlLzIwMTktMDQtMjYiIC8+DQo8bWV0YSBuYW1lPSJvZzp0aXRsZSIgY29udGVudD0iTklTVCBJbnRlcm5hbCBvciBJbnRlcmFnZW5jeSBSZXBvcnQgKE5JU1RJUikgODIwNCAoV2l0aGRyYXduKSwgQ3liZXJzZWN1cml0eSBGcmFtZXdvcmsgT25saW5lIEluZm9ybWF0aXZlIFJlZmVyZW5jZXMgKE9MSVIpIFN1Ym1pc3Npb25zOiBTcGVjaWZpY2F0aW9uIGZvciBDb21wbGV0aW5nIHRoZSBPTElSIFRlbXBsYXRlIiAvPg0KPG1ldGEgbmFtZT0ib2c6ZGVzY3JpcHRpb24iIGNvbnRlbnQ9IlRoaXMgZG9jdW1lbnQgcHJvdmlkZXMgaW5zdHJ1Y3Rpb25zIGFuZCBkZWZpbml0aW9ucyBmb3IgY29tcGxldGluZyB0aGUgQ3liZXJzZWN1cml0eSBGcmFtZXdvcmsgKENTRikgT25saW5lIEluZm9ybWF0aXZlIFJlZmVyZW5jZXMgKE9MSVIpIHNwcmVhZHNoZWV0IHRlbXBsYXRlIGF2YWlsYWJsZSBmb3IgZG93bmxvYWQgYXQgaHR0cHM6Ly93d3cubmlzdC5nb3YvY3liZXJmcmFtZXdvcmsvaW5mb3JtYXRpdmUtcmVmZXJlbmNlcy7CoCBUaGlzIGRvY3VtZW50IGlzIGludGVuZGVkIHRvIGFzc2lzdCBkZXZlbG9wZXJzIG9mIFJlZmVyZW5jZXMgYXMgdGhleSBjb21wbGV0ZSB0aGUgc3ByZWFkc2hlZXQgdGVtcGxhdGUuIERlZmluaXRpb25zIGFyZSBwcm92aWRlZCBmb3IgY29sdW1uIGFuZCByb3cgaGVhZGluZ3MgaW4gYWRkaXRpb24gdG8gYSBkaXNjdXNzaW9uIG9mIGV4cGVjdGVkIHZhbHVlcy4iIC8+DQoNCg0KPG1ldGEgbmFtZT0iYXJ0aWNsZTphdXRob3IiIGNvbnRlbnQ9IkJhcnJldHQsIE1hdHRoZXciIC8+DQo8bWV0YSBuYW1lPSJhcnRpY2xlOmF1dGhvciIgY29udGVudD0iS2VsbGVyLCBOaWNvbGUiIC8+DQo8bWV0YSBuYW1lPSJhcnRpY2xlOmF1dGhvciIgY29udGVudD0iUXVpbm4sIFN0ZXBoZW4iIC8+DQo8bWV0YSBuYW1lPSJhcnRpY2xlOmF1dGhvciIgY29udGVudD0iU21pdGgsIE1hdHRoZXciIC8+DQoNCg0KPG1ldGEgbmFtZT0iYXJ0aWNsZTp0YWciIGNvbnRlbnQ9ImNyb3Nzd2FsayIgLz4NCjxtZXRhIG5hbWU9ImFydGljbGU6dGFnIiBjb250ZW50PSJDeWJlcnNlY3VyaXR5IEZyYW1ld29yayIgLz4NCjxtZXRhIG5hbWU9ImFydGljbGU6dGFnIiBjb250ZW50PSJJbmZvcm1hdGl2ZSBSZWZlcmVuY2VzIiAvPg0KPG1ldGEgbmFtZT0iYXJ0aWNsZTp0YWciIGNvbnRlbnQ9IkZyYW1ld29yayBmb3IgSW1wcm92aW5nIENyaXRpY2FsIEluZnJhc3RydWN0dXJlIEN5YmVyc2VjdXJpdHkiIC8+DQo8bWV0YSBuYW1lPSJhcnRpY2xlOnRhZyIgY29udGVudD0ibWFwcGluZyIgLz4NCjxtZXRhIG5hbWU9ImFydGljbGU6dGFnIiBjb250ZW50PSJPbmxpbmUgSW5mb3JtYXRpdmUgUmVmZXJlbmNlcyIgLz4NCjxtZXRhIG5hbWU9ImFydGljbGU6cHVibGlzaGVkX3RpbWUiIGNvbnRlbnQ9IjIwMTktMDQtMjYiIC8+DQo8bWV0YSBuYW1lPSJvZzppbWFnZSIgY29udGVudD0iaHR0cHM6Ly9jc3JjLm5pc3QuZ292L0NTUkMvbWVkaWEvaW1hZ2VzL0NTUkMtbG9nby1vcGVuLWdyYXBoLnBuZyIgLz4NCjwvaGVhZD4NCjxib2R5IGNsYXNzPSJMVFIgVW5rbm93biBFTlVTIENvbnRlbnRCb2R5IiA+DQogICAgDQogICAgPGZvcm0gbWV0aG9kPSJwb3N0IiBhY3Rpb249Ii9wdWJsaWNhdGlvbnMvZGV0YWlsL25pc3Rpci84MjA0L2FyY2hpdmUvMjAxOS0wNC0yNiIgaWQ9ImZvcm0iPg0KPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iX19DTVNDc3JmVG9rZW4iIGlkPSJfX0NNU0NzcmZUb2tlbiIgdmFsdWU9InBicjQxTEc3N21FOGcvTnZabkU1UkU4U3gzcERhN0RMQldMd1ZDVXhBVi84Ykp2Wnk4cDZjZENpei9oWS9WOEVMRWRUaWxmc3ZTN3kwZXd5VTZDQlM4d2FjbGFSVU5INk0rdG10ajg3eUQwPSIgLz4NCjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9Il9fVklFV1NUQVRFIiBpZD0iX19WSUVXU1RBVEUiIHZhbHVlPSJ6WUc4dGF5WDRGRmVYeFZQbmdld0YxVTBBcGUrd25KMS9zSlpQanNPVERpYVZqY2Z2b0Vzc2R5NjQyTG5CTEFhTE44cFM5RG5sOWJKRjFtTnlYQ1g3RTM5MFFjT0M4TVVyeUxkUFpyNU0yUHJ5L3dKcEczbjMrZ3VwYXgxT2haMDJTYVlnRUpqYjB6ZEJYYzNZa0FKSndPODIyU2JVQkNneTIvc0RZRU0wVStQZnl6bWxBTlFWNVliVHJYT3RWQlFheHFKNmE2UGhvZE5pUkRadnJLVllYaUVJVXM2TmpCNTFqWmJTa1VOc3BFcENtS21IVEM5clFWcG9BNUJvM3UxMzdhQ3ZIdk5MSG80TUpYTzljcE4vNEtCRHZaZ2NJRHgxVzYrc0VPZXllWUJWQytoRndKTU1VeUI2bWlDR1hLanp3bkZSVkJzeGp6RmNoSmlrSjRtSEkwUjMrODFYSUtiUkNBWjRzN0hkSlU9IiAvPg0KDQo8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJsbmciIGlkPSJsbmciIHZhbHVlPSJlbi1VUyIgLz4NCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4NCgkvLzwhW0NEQVRBWwoNCmZ1bmN0aW9uIFBNX1Bvc3RiYWNrKHBhcmFtKSB7IGlmICh3aW5kb3cudG9wLkhpZGVTY3JlZW5Mb2NrV2FybmluZ0FuZFN5bmMpIHsgd2luZG93LnRvcC5IaWRlU2NyZWVuTG9ja1dhcm5pbmdBbmRTeW5jKDEwODApOyB9IGlmKHdpbmRvdy5DTVNDb250ZW50TWFuYWdlcikgeyBDTVNDb250ZW50TWFuYWdlci5hbGxvd1N1Ym1pdCA9IHRydWU7IH07IF9fZG9Qb3N0QmFjaygnbSRhbScscGFyYW0pOyB9DQpmdW5jdGlvbiBQTV9DYWxsYmFjayhwYXJhbSwgY2FsbGJhY2ssIGN0eCkgeyBpZiAod2luZG93LnRvcC5IaWRlU2NyZWVuTG9ja1dhcm5pbmdBbmRTeW5jKSB7IHdpbmRvdy50b3AuSGlkZVNjcmVlbkxvY2tXYXJuaW5nQW5kU3luYygxMDgwKTsgfWlmICh3aW5kb3cuQ01TQ29udGVudE1hbmFnZXIpIHsgQ01TQ29udGVudE1hbmFnZXIuc3RvcmVDb250ZW50Q2hhbmdlZFN0YXR1cygpOyB9O1dlYkZvcm1fRG9DYWxsYmFjaygnbSRhbScscGFyYW0sY2FsbGJhY2ssY3R4LG51bGwsdHJ1ZSk7IH0KLy9dXT4NCjwvc2NyaXB0Pg0KPHNjcmlwdCBzcmM9Ii9TY3JpcHRSZXNvdXJjZS5heGQ/ZD11SElrbGVWZURKZjR4UzUwS3J6LXlBbGllT1RQYVJFOG1fNEp5RVk2bGdsLXZPZjlFeE0tck1TeEo0TzFMWEh5dWZTZ1p5YmpneDB5RVNBWktXTV91SjNEZWxZYVhZbzJtWlhYS25xV2R3MU5taXZ6WHZuUGpuSUtoY3BDVHVsNExKV0U2dy1sRGxqNXhEWmdMS0FOaWNZd1NjQ3RkVUlFajhzbHlDZXl2TG8xJmFtcDt0PWZmZmZmZmZmOWE5NTc3ZTgiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+DQo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+DQoJLy88IVtDREFUQVsKDQp2YXIgQ01TID0gQ01TIHx8IHt9Ow0KQ01TLkFwcGxpY2F0aW9uID0gew0KICAibGFuZ3VhZ2UiOiAiZW4iLA0KICAiaW1hZ2VzVXJsIjogIi9DTVNQYWdlcy9HZXRSZXNvdXJjZS5hc2h4P2ltYWdlPSU1YkltYWdlcy56aXAlNWQlMmYiLA0KICAiaXNEZWJ1Z2dpbmdFbmFibGVkIjogZmFsc2UsDQogICJhcHBsaWNhdGlvblVybCI6ICIvIiwNCiAgImlzRGlhbG9nIjogZmFsc2UsDQogICJpc1JUTCI6ICJmYWxzZSINCn07DQoKLy9dXT4NCjwvc2NyaXB0Pg0KPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iX19WSUVXU1RBVEVHRU5FUkFUT1IiIGlkPSJfX1ZJRVdTVEFURUdFTkVSQVRPUiIgdmFsdWU9IkE1MzQzMTg1IiAvPg0KICAgIA0KICAgIDxkaXYgaWQ9ImN0eE0iPg0KDQo8L2Rpdj4NCiAgICA8ZGl2IGlkPSJhbnRpQ2xpY2tqYWNrIiBzdHlsZT0iZGlzcGxheTogbm9uZSI+DQogICAgPGgxPllvdSBhcmUgdmlld2luZyB0aGlzIHBhZ2UgaW4gYW4gdW5hdXRob3JpemVkIGZyYW1lIHdpbmRvdy48L2gxPg0KICAgIDxwPlRoaXMgaXMgYSBwb3RlbnRpYWwgc2VjdXJpdHkgaXNzdWUsIHlvdSBhcmUgYmVpbmcgcmVkaXJlY3RlZCB0byA8YSBocmVmPSJodHRwczovL2NzcmMubmlzdC5nb3YiPmh0dHBzOi8vY3NyYy5uaXN0LmdvdjwvYT48L3A+DQo8L2Rpdj4NCjxuYXYgaWQ9Im5hdmJhciIgY2xhc3M9Im5hdmJhciI+DQogIDxkaXYgaWQ9Im5pc3QtbWVudS1jb250YWluZXIiIGNsYXNzPSJjb250YWluZXIiPg0KICAgIDxkaXYgY2xhc3M9InJvdyI+DQogICAgPCEtLSBCcmFuZCAtLT4NCiAgICA8ZGl2IGNsYXNzPSJjb2wteHMtNiBjb2wtbWQtNCBuYXZiYXItaGVhZGVyIj4NCiAgICAgIDxhIGNsYXNzPSJuYXZiYXItYnJhbmQiIGhyZWY9Imh0dHBzOi8vd3d3Lm5pc3QuZ292IiB0YXJnZXQ9Il9ibGFuayIgaWQ9Im5hdmJhci1icmFuZC1pbWFnZSI+DQogICAgICAgIDxpbWcgc3JjPSIvQ1NSQy9NZWRpYS9pbWFnZXMvc3ZnL25pc3QtbG9nby5zdmciIGFsdD0iTmF0aW9uYWwgSW5zdGl0dXRlIG9mIFN0YW5kYXJkcyBhbmQgVGVjaG5vbG9neSIgd2lkdGg9IjExMCIgaGVpZ2h0PSIzMCI+DQogICAgICA8L2E+DQogICAgPC9kaXY+DQogICAgPGRpdiBjbGFzcz0iY29sLXhzLTYgY29sLW1kLTggbmF2YmFyLW5pc3QtbG9nbyI+DQogICAgICAgIDxkaXYgY2xhc3M9ImZvcm0taW5saW5lIGhpZGRlbi1zbSBoaWRkZW4teHMiPg0KICAgICAgICAgICAgPGxhYmVsIGZvcj0ic2VhcmNoLWNzcmMtcXVlcnkiIGNsYXNzPSJlbGVtZW50LWludmlzaWJsZSI+U2VhcmNoPC9sYWJlbD4NCiAgICAgICAgICAgIDxpbnB1dCBhdXRvY29tcGxldGU9Im9mZiIgY2xhc3M9ImZvcm0tY29udHJvbCIgaWQ9InNlYXJjaC1jc3JjLXF1ZXJ5IiBuYW1lPSJzZWFyY2gtY3NyYy1xdWVyeSIgdHlwZT0idGV4dCIgc2l6ZT0iMTUiIG1heGxlbmd0aD0iMTI4IiBwbGFjZWhvbGRlcj0iU2VhcmNoIENTUkMiLz4NCiAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBpZD0ic2VhcmNoLWNzcmMtc3VibWl0LWJ0biIgbmFtZT0ib3AiIGNsYXNzPSJmb3JtLXN1Ym1pdCI+DQogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImVsZW1lbnQtaW52aXNpYmxlIj5TZWFyY2g8L3NwYW4+DQogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhIGZhLXNlYXJjaCI+PC9pPg0KICAgICAgICAgICAgPC9idXR0b24+DQogICAgICAgIDwvZGl2Pg0KICAgICAgPHNwYW4gaWQ9Im52ZC1tZW51LWJ1dHRvbiIgY2xhc3M9InB1bGwtcmlnaHQiPg0KICAgICAgICA8YSBocmVmPSIjIiBpZD0ibnZkLW1lbnUtYnV0dG9uLWxpbmsiPg0KICAgICAgICAgIDxzcGFuIGNsYXNzPSJmYSBmYS1iYXJzIj48L3NwYW4+IA0KICAgICAgICAgIDxzcGFuIGlkPSJudmQtbWVudS1mdWxsLXRleHQiPjxzcGFuIGNsYXNzPSJoaWRkZW4teHhzIj5DU1JDIDwvc3Bhbj5NRU5VPC9zcGFuPg0KICAgICAgICA8L2E+DQogICAgICA8L3NwYW4+DQogICAgPC9kaXY+DQogICAgPC9kaXY+DQogIDwvZGl2Pg0KICAgIA0KICAgIDxkaXYgY2xhc3M9ImZvcm0taW5saW5lIGhpZGRlbi1tZCBoaWRkZW4tbGciPg0KICAgICAgICA8bGFiZWwgZm9yPSJzZWFyY2gtY3NyYy1xdWVyeSIgY2xhc3M9ImVsZW1lbnQtaW52aXNpYmxlIj5TZWFyY2g8L2xhYmVsPg0KICAgICAgICA8aW5wdXQgYXV0b2NvbXBsZXRlPSJvZmYiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIGlkPSJzZWFyY2gtY3NyYy1xdWVyeS1tb2JpbGUiIG5hbWU9InNlYXJjaC1jc3JjLXF1ZXJ5IiB0eXBlPSJ0ZXh0IiBzaXplPSIxNSIgbWF4bGVuZ3RoPSIxMjgiIHBsYWNlaG9sZGVyPSJTZWFyY2ggQ1NSQyIvPg0KICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgaWQ9InNlYXJjaC1jc3JjLXN1Ym1pdC1idG4tbW9iaWxlIiBuYW1lPSJvcCIgY2xhc3M9ImZvcm0tc3VibWl0Ij4NCiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJlbGVtZW50LWludmlzaWJsZSI+U2VhcmNoPC9zcGFuPg0KICAgICAgICAgICAgPGkgY2xhc3M9ImZhIGZhLXNlYXJjaCI+PC9pPg0KICAgICAgICA8L2J1dHRvbj4NCiAgICA8L2Rpdj4NCjxkaXYgY2xhc3M9Im1haW4tbWVudS1yb3cgY29udGFpbmVyIj4NCiAgICA8IS0tIENvbGxlY3QgdGhlIG5hdiBsaW5rcywgZm9ybXMsIGFuZCBvdGhlciBjb250ZW50IGZvciB0b2dnbGluZyAtLT4NCiAgICA8ZGl2IGlkPSJtYWluLW1lbnUtZHJvcCIgY2xhc3M9ImNvbC1sZy0xMiIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4NCiAgICAgICAgPHVsPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9wcm9qZWN0cyI+UHJvamVjdHM8L2E+PC9saT4NCiAgICAgICAgICAgIDxsaT4NCiAgICAgICAgICAgICAgICA8YSBocmVmPSIvcHVibGljYXRpb25zIj4NCiAgICAgICAgICAgICAgICAgICAgUHVibGljYXRpb25zDQogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJleHBhbmRlciBmYSBmYS1wbHVzIiBpZD0ibWFpbi1tZW51LXB1YnMtZXhwYW5kZXIiIGRhdGEtZXhwYW5kZXItbmFtZT0icHVibGljYXRpb25zIiBkYXRhLWV4cGFuZGVkPSJmYWxzZSI+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZWxlbWVudC1pbnZpc2libGUiPkV4cGFuZCBvciBDb2xsYXBzZTwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPg0KICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJkaXNwbGF5OiBub25lOyIgY2xhc3M9InN1Yi1tZW51IiBkYXRhLWV4cGFuZGVyLXRyaWdnZXI9InB1YmxpY2F0aW9ucyIgaWQ9Im1haW4tbWVudS1wdWJzLWV4cGFuZGVkIj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1sZy00Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD48YSBocmVmPSIvcHVibGljYXRpb25zL2RyYWZ0LXB1YnMiPkRyYWZ0IFB1YnM8L2E+PC9wPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPjxhIGhyZWY9Ii9wdWJsaWNhdGlvbnMvZmluYWwtcHVicyI+RmluYWwgUHViczwvYT48L3A+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+PGEgaHJlZj0iL3B1YmxpY2F0aW9ucy9maXBzIj5GSVBTPC9hPjwvcD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD48YSBocmVmPSIvcHVibGljYXRpb25zL3NwIj5TcGVjaWFsIFB1YmxpY2F0aW9ucyAoU1A8c21hbGw+czwvc21hbGw+KTwvYT48L3A+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1sZy00Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD48YSBocmVmPSIvcHVibGljYXRpb25zL25pc3RpciI+TklTVElSPHNtYWxsPnM8L3NtYWxsPjwvYT48L3A+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+PGEgaHJlZj0iL3B1YmxpY2F0aW9ucy9pdGwtYnVsbGV0aW4iPklUTCBCdWxsZXRpbnM8L2E+PC9wPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPjxhIGhyZWY9Ii9wdWJsaWNhdGlvbnMvd2hpdGUtcGFwZXIiPldoaXRlIFBhcGVyczwvYT48L3A+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1sZy00Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD48YSBocmVmPSIvcHVibGljYXRpb25zL2pvdXJuYWwtYXJ0aWNsZSI+Sm91cm5hbCBBcnRpY2xlczwvYT48L3A+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+PGEgaHJlZj0iL3B1YmxpY2F0aW9ucy9jb25mZXJlbmNlLXBhcGVyIj5Db25mZXJlbmNlIFBhcGVyczwvYT48L3A+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+PGEgaHJlZj0iL3B1YmxpY2F0aW9ucy9ib29rIj5Cb29rczwvYT48L3A+DQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICA8L2xpPg0KICAgICAgICAgICAgPGxpPg0KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii90b3BpY3MiPg0KICAgICAgICAgICAgICAgICAgICBUb3BpY3MNCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImV4cGFuZGVyIGZhIGZhLXBsdXMiIGlkPSJtYWluLW1lbnUtdG9waWNzLWV4cGFuZGVyIiBkYXRhLWV4cGFuZGVyLW5hbWU9InRvcGljcyIgZGF0YS1leHBhbmRlZD0iZmFsc2UiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImVsZW1lbnQtaW52aXNpYmxlIj5FeHBhbmQgb3IgQ29sbGFwc2U8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0iZGlzcGxheTogbm9uZTsiIGNsYXNzPSJzdWItbWVudSIgZGF0YS1leHBhbmRlci10cmlnZ2VyPSJ0b3BpY3MiIGlkPSJtYWluLW1lbnUtdG9waWNzLWV4cGFuZGVkIj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1sZy00Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD48YSBocmVmPSIvVG9waWNzL1NlY3VyaXR5LWFuZC1Qcml2YWN5Ij5TZWN1cml0eSAmYW1wIFByaXZhY3k8L2E+PC9wPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPjxhIGhyZWY9Ii9Ub3BpY3MvQXBwbGljYXRpb25zIj5BcHBsaWNhdGlvbnM8L2E+PC9wPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbGctNCI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+PGEgaHJlZj0iL1RvcGljcy9UZWNobm9sb2dpZXMiPlRlY2hub2xvZ2llczwvYT48L3A+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+PGEgaHJlZj0iL1RvcGljcy9TZWN0b3JzIj5TZWN0b3JzPC9hPjwvcD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLWxnLTQiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPjxhIGhyZWY9Ii9Ub3BpY3MvTGF3cy1hbmQtUmVndWxhdGlvbnMiPkxhd3MgJmFtcDsgUmVndWxhdGlvbnM8L2E+PC9wPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPjxhIGhyZWY9Ii9Ub3BpY3MvQWN0aXZpdGllcy1hbmQtUHJvZHVjdHMiPkFjdGl2aXRpZXMgJmFtcDsgUHJvZHVjdHM8L2E+PC9wPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvbmV3cyI+TmV3cyAmYW1wOyBVcGRhdGVzPC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2V2ZW50cyI+RXZlbnRzPC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2dsb3NzYXJ5Ij5HbG9zc2FyeTwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPg0KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9hYm91dCI+DQogICAgICAgICAgICAgICAgICAgIEFib3V0IENTUkMNCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImV4cGFuZGVyIGZhIGZhLXBsdXMiIGlkPSJtYWluLW1lbnUtYWJvdXQtZXhwYW5kZXIiIGRhdGEtZXhwYW5kZXItbmFtZT0iYWJvdXQiIGRhdGEtZXhwYW5kZWQ9ImZhbHNlIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJlbGVtZW50LWludmlzaWJsZSI+RXhwYW5kIG9yIENvbGxhcHNlPC9zcGFuPg0KICAgICAgICAgICAgICAgICAgICA8L3NwYW4+DQogICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6IG5vbmU7IiBjbGFzcz0ic3ViLW1lbnUiIGRhdGEtZXhwYW5kZXItdHJpZ2dlcj0iYWJvdXQiIGlkPSJtYWluLW1lbnUtYWJvdXQtZXhwYW5kZWQiPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLWxnLTYiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nPjxhIGhyZWY9Ii9Hcm91cHMvQ29tcHV0ZXItU2VjdXJpdHktRGl2aXNpb24iPkNvbXB1dGVyIFNlY3VyaXR5IERpdmlzaW9uPC9hPjwvc3Ryb25nPjxiciAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL0dyb3Vwcy9Db21wdXRlci1TZWN1cml0eS1EaXZpc2lvbi9DcnlwdG9ncmFwaGljLVRlY2hub2xvZ3kiPkNyeXB0b2dyYXBoaWMgVGVjaG5vbG9neTwvYT48L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9Hcm91cHMvQ29tcHV0ZXItU2VjdXJpdHktRGl2aXNpb24vU2VjdXJlLVN5c3RlbXMtYW5kLUFwcGxpY2F0aW9ucyI+U2VjdXJlIFN5c3RlbXMgYW5kIEFwcGxpY2F0aW9uczwvYT48L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9Hcm91cHMvQ29tcHV0ZXItU2VjdXJpdHktRGl2aXNpb24vU2VjdXJpdHktQ29tcG9uZW50cy1hbmQtTWVjaGFuaXNtcyI+U2VjdXJpdHkgQ29tcG9uZW50cyBhbmQgTWVjaGFuaXNtczwvYT48L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9Hcm91cHMvQ29tcHV0ZXItU2VjdXJpdHktRGl2aXNpb24vU2VjdXJpdHktRW5naW5lZXJpbmctYW5kLVJpc2stTWFuYWdlbWVudCI+U2VjdXJpdHkgRW5naW5lZXJpbmcgYW5kIFJpc2sgTWFuYWdlbWVudDwvYT48L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9Hcm91cHMvQ29tcHV0ZXItU2VjdXJpdHktRGl2aXNpb24vU2VjdXJpdHktVGVzdGluZy1WYWxpZGF0aW9uLWFuZC1NZWFzdXJlbWVudCI+U2VjdXJpdHkgVGVzdGluZywgVmFsaWRhdGlvbiwgYW5kIE1lYXN1cmVtZW50PC9hPjwvbGk+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbGctNiI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmc+PGEgaHJlZj0iL0dyb3Vwcy9BcHBsaWVkLUN5YmVyc2VjdXJpdHktRGl2aXNpb24iPkFwcGxpZWQgQ3liZXJzZWN1cml0eSBEaXZpc2lvbjwvYT48L3N0cm9uZz48YnIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9Hcm91cHMvQXBwbGllZC1DeWJlcnNlY3VyaXR5LURpdmlzaW9uL0N5YmVyc2VjdXJpdHktYW5kLVByaXZhY3ktQXBwbGljYXRpb25zIj5DeWJlcnNlY3VyaXR5IGFuZCBQcml2YWN5IEFwcGxpY2F0aW9uczwvYT48L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9Hcm91cHMvQXBwbGllZC1DeWJlcnNlY3VyaXR5LURpdmlzaW9uL05hdGlvbmFsLUN5YmVyc2VjdXJpdHktQ2VudGVyLW9mLUV4Y2VsbGVuY2UiPk5hdGlvbmFsIEN5YmVyc2VjdXJpdHkgQ2VudGVyIG9mIEV4Y2VsbGVuY2UgKE5DQ29FKTwvYT48L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3Lm5pc3QuZ292L25pY2UvIj5OYXRpb25hbCBJbml0aWF0aXZlIGZvciBDeWJlcnNlY3VyaXR5IEVkdWNhdGlvbiAoTklDRSk8L2E+PC9saT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvR3JvdXBzL0FwcGxpZWQtQ3liZXJzZWN1cml0eS1EaXZpc2lvbi9UcnVzdGVkLUlkZW50aXRpZXMtR3JvdXAiPlRydXN0ZWQgSWRlbnRpdGllcyBHcm91cDwvYT48L2xpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3VsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2NvbnRhY3QiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29udGFjdCBVcw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPC9saT4NCiAgICAgICAgPC91bD4NCiAgICA8L2Rpdj48IS0tIC8jbW9iaWxlLW5hdi1jb250YWluZXIgLS0+DQo8L2Rpdj4NCg0KPC9uYXY+DQo8c2VjdGlvbiBpZD0iaXRsLWhlYWRlciIgY2xhc3M9Imhhcy1tZW51Ij4NCiAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPg0KICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTEyIGNvbC1tZC04Ij4NCiAgICAgICAgICAgICAgICA8aDIgY2xhc3M9ImhpZGRlbi14cyBoaWRkZW4tc20iPg0KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5uaXN0Lmdvdi9pdGwiIHRhcmdldD0iX2JsYW5rIiBpZD0iaXRsLWhlYWRlci1saW5rIj5JbmZvcm1hdGlvbiBUZWNobm9sb2d5IExhYm9yYXRvcnk8L2E+DQogICAgICAgICAgICAgICAgPC9oMj4NCiAgICAgICAgICAgICAgICA8aDEgY2xhc3M9ImhpZGRlbi14cyBoaWRkZW4tc20iPg0KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvIiBpZD0iY3NyYy1oZWFkZXItbGluay1sZyI+Q29tcHV0ZXIgU2VjdXJpdHkgUmVzb3VyY2UgQ2VudGVyPC9hPg0KICAgICAgICAgICAgICAgIDwvaDE+DQogICAgICAgICAgICAgICAgPGgxIGNsYXNzPSJoaWRkZW4teHMgdGV4dC1jZW50ZXIgaGlkZGVuLW1kIGhpZGRlbi1sZyIgaWQ9ImNzcmMtaGVhZGVyLWxpbmstbWQiPkNvbXB1dGVyIFNlY3VyaXR5IFJlc291cmNlIENlbnRlcjwvaDE+DQogICAgICAgICAgICAgICAgPGgxIGNsYXNzPSJoaWRkZW4tc20gaGlkZGVuLW1kIGhpZGRlbi1sZyB0ZXh0LWNlbnRlciIgaWQ9ImNzcmMtaGVhZGVyLWxpbmstc20iPkNvbXB1dGVyIFNlY3VyaXR5PGJyIC8+UmVzb3VyY2UgQ2VudGVyPC9oMT4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTEyIGNvbC1tZC00Ij4NCiAgICAgICAgICAgICAgICA8YSBpZD0ibG9nby1jc3JjIiBocmVmPSIvIiBzdHlsZT0id2lkdGg6IDEwMCU7IHRleHQtYWxpZ246IGNlbnRlcjsgZGlzcGxheTogYmxvY2s7Ij48aW1nIGlkPSJpbWctbG9nby1jc3JjInNyYz0iL0NTUkMvTWVkaWEvaW1hZ2VzL0NTUkMtd2hpdGUtMTM0LTM4LnBuZyIgYWx0PSJDU1JDIExvZ28iIGNsYXNzPSJjc3JjLWhlYWRlci1sb2dvIj48L2E+DQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQo8L3NlY3Rpb24+DQoNCjxkaXYgaWQ9ImJvZHktc2VjdGlvbiIgY2xhc3M9ImNvbnRhaW5lciI+DQoNCg0KICA8ZGl2IGNsYXNzPSJwdWJsaWNhdGlvbnMtZGV0YWlsIj4NCiAgICA8b2wgY2xhc3M9ImJyZWFkY3J1bWIiPjxhIGhyZWY9Ii9QdWJsaWNhdGlvbnMiIGNsYXNzPSJDTVNCcmVhZENydW1ic0xpbmsiPlB1YmxpY2F0aW9uczwvYT4gPHNwYW4gY2xhc3M9ImZhIGZhLWFuZ2xlLXJpZ2h0Ij48L3NwYW4+IDxzcGFuICBjbGFzcz0iQ01TQnJlYWRDcnVtYnNDdXJyZW50SXRlbSI+RGV0YWlsPC9zcGFuPg0KPC9vbD4gDQoNCg0KDQogICAgDQogICAgDQogICAgDQogICAgDQogICAgDQogICAgDQogICAgDQogICAgICAgIDxoMyBpZD0icHViLWhlYWRlci1kaXNwbGF5LWNvbnRhaW5lciI+DQogICAgICAgICAgICA8c3BhbiBpZD0icHViLWhlYWRlci1mdWxsLWRpc3BsYXkiPg0KICAgICAgICAgICAgICBOSVNUSVIgIDgyMDQNCiAgICAgICAgICAgIDwvc3Bhbj4NCiAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1leGNsYW1hdGlvbi10cmlhbmdsZSB0ZXh0LWRhbmdlciIgaWQ9InB1Yi1oZWFkZXItd2l0aGRyYXduIiB0aXRsZT0iVGhpcyBwdWJsaWNhdGlvbiBoYXMgYmVlbiB3aXRoZHJhd24uIFNlZSBkZXRhaWxzIGJlbG93LiI+PC9pPg0KICAgICAgICAgICAgDQogICAgICAgIDwvaDM+DQoNCiAgICAgICAgDQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJhbGVydCBhbGVydC1kYW5nZXIiIHJvbGU9ImFsZXJ0IiBpZD0icHViLXdpdGhkcmF3bi1tZXNzYWdlIj4NCiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtZXhjbGFtYXRpb24tdHJpYW5nbGUgdGV4dC1kYW5nZXIiIGlkPSJwdWItd2l0aGRyYXduLXRyaWFuZ2xlIiB0aXRsZT0iVGhpcyBwdWJsaWNhdGlvbiBoYXMgYmVlbiB3aXRoZHJhd24uIj48L2k+DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgIFdpdGhkcmF3biBvbiA8c3BhbiBpZD0ncHViLXdpdGhkcmF3bi1kYXRlJz5NYXkgMzEsIDIwMTk8L3NwYW4+Lg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICBTdXBlcnNlZGVkIGJ5IDxzcGFuIGlkPSJwdWItc3VwZXJzZWRlZC1jb250YWluZXIiIGRhdGEtdG90YWw9IjEiPjxhIGhyZWY9Jy9wdWJsaWNhdGlvbnMvZGV0YWlsL25pc3Rpci84MjA0L2FyY2hpdmUvMjAxOS0wNS0zMScgaWQ9J3B1Yi1zdXBlcnNlZGVkLWJ5LTAnPk5JU1RJUiAgODIwNDwvYT48L3NwYW4+DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgIA0KDQogICAgICAgIDxoMSBpZD0icHViLXRpdGxlIj5DeWJlcnNlY3VyaXR5IEZyYW1ld29yayBPbmxpbmUgSW5mb3JtYXRpdmUgUmVmZXJlbmNlcyAoT0xJUikgU3VibWlzc2lvbnM6IFNwZWNpZmljYXRpb24gZm9yIENvbXBsZXRpbmcgdGhlIE9MSVIgVGVtcGxhdGU8L2gxPg0KICAgICAgICANCiAgICAgICAgPGRpdiBjbGFzcz0icGFnZS1zb2NpYWwtYnV0dG9ucyI+DQogICAgICAgICAgICA8YSBocmVmPSIjIiBjbGFzcz0ic29jaWFsLWZhY2Vib29rIiBpZD0ic29jaWFsRmFjZWJvb2siPjxpIGNsYXNzPSJmYSBmYS1mYWNlYm9vayBmYS1mdyIgYXJpYS1oaWRkZW49InRydWUiPjwvaT48L2E+DQogICAgICAgICAgICA8YSBocmVmPSIjIiBjbGFzcz0ic29jaWFsLWdvb2dsZS1wbHVzIiBpZD0ic29jaWFsR29vZ2xlUGx1cyI+PGkgY2xhc3M9ImZhIGZhLWdvb2dsZS1wbHVzIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9pPjwvYT4NCiAgICAgICAgICAgIDxhIGhyZWY9IiMiIGNsYXNzPSJzb2NpYWwtdHdpdHRlciIgaWQ9InNvY2lhbFR3aXR0ZXIiPjxpIGNsYXNzPSJmYSBmYS10d2l0dGVyIGZhLWZ3IiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9pPjwvYT4NCiAgICAgICAgPC9kaXY+DQogICAgDQogICAgICAgIDxwIGNsYXNzPSJoaWRkZW4tbGcgaGlkZGVuLW1kIj4NCiAgICAgICAgICAgICZuYnNwOyZuYnNwOyZuYnNwOw0KICAgICAgICAgICAgPGEgaHJlZj0iI3B1YnMtZG9jdW1lbnRhdGlvbiIgY2xhc3M9ImJ0biBidG4tbGcgYnRuLWluZm8iIGlkPSJwdWItdG9waWNzLWFuY2hvci1zbSI+RG9jdW1lbnRhdGlvbjwvYT4NCiAgICAgICAgICAgIA0KICAgICAgICAgICAgJm5ic3A7Jm5ic3A7Jm5ic3A7DQogICAgICAgICAgICA8YSBocmVmPSIjcHVicy10b3BpY3MiIGNsYXNzPSJidG4gYnRuLWxnIGJ0bi1pbmZvIiBpZD0icHViLXRvcGljcy1hbmNob3Itc20iPlRvcGljczwvYT4NCiAgICAgICAgICAgIA0KICAgICAgICA8L3A+DQogICAgDQogICAgICAgIDxkaXYgY2xhc3M9InJvdyI+DQogICAgICAgICAgICA8ZGl2ICBjbGFzcz0iY29sLW1kLTggY29sLXNtLTEyIHB1YmxpY2F0aW9uLXBhbmVsIj4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDxwPg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICA8c3Ryb25nPkRhdGUgUHVibGlzaGVkOjwvc3Ryb25nPiA8c3BhbiBpZD0icHViLXJlbGVhc2UtZGF0ZSI+QXByaWwgMjAxOTwvc3Bhbj48YnIgLz4NCiAgICAgICAgICAgICAgICANCiAgICANCiAgICAgICAgICAgICAgICANCiAgICANCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8L3A+DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPHA+DQogICAgICAgICAgICAgICAgDQogICAgDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPC9wPg0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDxoND5BdXRob3Iocyk8L2g0Pg0KICAgICAgICAgICAgICAgIDxwPjxzdHJvbmcgaWQ9InB1Yi1hdXRob3JzLWNvbnRhaW5lciIgZGF0YS10b3RhbD0iNCI+PHNwYW4gaWQ9J3B1Yi1hdXRob3ItMCc+TWF0dGhldyBCYXJyZXR0IChOSVNUKTwvc3Bhbj4sIDxzcGFuIGlkPSdwdWItYXV0aG9yLTEnPk5pY29sZSBLZWxsZXIgKE5JU1QpPC9zcGFuPiwgPHNwYW4gaWQ9J3B1Yi1hdXRob3ItMic+U3RlcGhlbiBRdWlubiAoTklTVCk8L3NwYW4+LCA8c3BhbiBpZD0ncHViLWF1dGhvci0zJz5NYXR0aGV3IFNtaXRoIChHMik8L3NwYW4+PC9zdHJvbmc+PC9wPg0KICAgICAgICAgICAgICAgIA0KICAgIA0KICAgIA0KICAgICAgICAgICAgICAgIA0KICAgIA0KICAgIA0KICAgICAgICAgICAgICAgIA0KICAgIA0KICAgIA0KICAgICAgICAgICAgICAgIA0KICAgIA0KICAgIA0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJzLWNhbGxvdXQgYnMtY2FsbG91dC1zdWNjZXNzIHB1Yi1hYnN0cmFjdC1jYWxsb3V0Ij4NCiAgICAgICAgICAgICAgICAgICAgPGg0IGlkPSJwdWJzLWFic3RyYWN0LWhlYWRlciI+QWJzdHJhY3Q8L2g0Pg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJoaWRkZW4tc20gaGlkZGVuLXhzIGhpZGRlbi14eHMiIGlkPSJwdWItZGV0YWlsLWFic3RyYWN0LWluZm8iPjxwPlRoaXMgZG9jdW1lbnQgcHJvdmlkZXMgaW5zdHJ1Y3Rpb25zIGFuZCBkZWZpbml0aW9ucyBmb3IgY29tcGxldGluZyB0aGUgQ3liZXJzZWN1cml0eSBGcmFtZXdvcmsgKENTRikgT25saW5lIEluZm9ybWF0aXZlIFJlZmVyZW5jZXMgKE9MSVIpIHNwcmVhZHNoZWV0IHRlbXBsYXRlIGF2YWlsYWJsZSBmb3IgZG93bmxvYWQgYXQgPGEgaHJlZj0iaHR0cHM6Ly93d3cubmlzdC5nb3YvY3liZXJmcmFtZXdvcmsvaW5mb3JtYXRpdmUtcmVmZXJlbmNlcyI+aHR0cHM6Ly93d3cubmlzdC5nb3YvY3liZXJmcmFtZXdvcmsvaW5mb3JtYXRpdmUtcmVmZXJlbmNlczwvYT4uJm5ic3A7IFRoaXMgZG9jdW1lbnQgaXMgaW50ZW5kZWQgdG8gYXNzaXN0IGRldmVsb3BlcnMgb2YgUmVmZXJlbmNlcyBhcyB0aGV5IGNvbXBsZXRlIHRoZSBzcHJlYWRzaGVldCB0ZW1wbGF0ZS4gRGVmaW5pdGlvbnMgYXJlIHByb3ZpZGVkIGZvciBjb2x1bW4gYW5kIHJvdyBoZWFkaW5ncyBpbiBhZGRpdGlvbiB0byBhIGRpc2N1c3Npb24gb2YgZXhwZWN0ZWQgdmFsdWVzLjwvcD48L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaGlkZGVuLWxnIGhpZGRlbi1tZCI+DQogICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9InB1Yi1kZXRhaWwtYWJzdHJhY3QtbWluIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBUaGlzIGRvY3VtZW50IHByb3ZpZGVzIGluc3RydWN0aW9ucyBhbmQgZGVmaW5pdGlvbnMgZm9yIGNvbXBsZXRpbmcgdGhlIEN5YmVyc2VjdXJpdHkgRnJhbWV3b3JrIChDU0YpIE9ubGluZSBJbmZvcm1hdGl2ZSBSZWZlcmVuY2VzIChPTElSKSBzcHJlYWRzaGVldCB0ZW1wbGF0ZSBhdmFpbGFibGUgZm9yIGRvd25sb2FkIGF0IGh0dHBzOi8vd3d3Lm5pc3QuZ292L2N5YmVyZnJhbWV3b3JrL2luZm9ybWF0aXZlLXJlZmVyZW5jZXMuwqAgVGhpcyBkb2N1bWVudCBpcyBpbnRlbmRlZCB0byBhc3Npc3QgZGV2ZWxvcGVycyBvZi4uLg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNwdWJzLWFic3RyYWN0LWhlYWRlciIgaWQ9InB1Yi1kZXRhaWwtYWJzLXNob3ciPlNlZSBmdWxsIGFic3RyYWN0PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJwdWItZGV0YWlsLWFic3RyYWN0LWFsbCIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD5UaGlzIGRvY3VtZW50IHByb3ZpZGVzIGluc3RydWN0aW9ucyBhbmQgZGVmaW5pdGlvbnMgZm9yIGNvbXBsZXRpbmcgdGhlIEN5YmVyc2VjdXJpdHkgRnJhbWV3b3JrIChDU0YpIE9ubGluZSBJbmZvcm1hdGl2ZSBSZWZlcmVuY2VzIChPTElSKSBzcHJlYWRzaGVldCB0ZW1wbGF0ZSBhdmFpbGFibGUgZm9yIGRvd25sb2FkIGF0IDxhIGhyZWY9Imh0dHBzOi8vd3d3Lm5pc3QuZ292L2N5YmVyZnJhbWV3b3JrL2luZm9ybWF0aXZlLXJlZmVyZW5jZXMiPmh0dHBzOi8vd3d3Lm5pc3QuZ292L2N5YmVyZnJhbWV3b3JrL2luZm9ybWF0aXZlLXJlZmVyZW5jZXM8L2E+LiZuYnNwOyBUaGlzIGRvY3VtZW50IGlzIGludGVuZGVkIHRvIGFzc2lzdCBkZXZlbG9wZXJzIG9mIFJlZmVyZW5jZXMgYXMgdGhleSBjb21wbGV0ZSB0aGUgc3ByZWFkc2hlZXQgdGVtcGxhdGUuIERlZmluaXRpb25zIGFyZSBwcm92aWRlZCBmb3IgY29sdW1uIGFuZCByb3cgaGVhZGluZ3MgaW4gYWRkaXRpb24gdG8gYSBkaXNjdXNzaW9uIG9mIGV4cGVjdGVkIHZhbHVlcy48L3A+PGJyIC8+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iI3B1YnMtYWJzdHJhY3QtaGVhZGVyIiBpZD0icHViLWRldGFpbC1hYnMtaGlkZSI+SGlkZSBmdWxsIGFic3RyYWN0PC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgICAgIDxoND5LZXl3b3JkczwvaDQ+IDxzcGFuIGlkPSdwdWIta2V5d29yZHMtY29udGFpbmVyJyBkYXRhLXRvdGFsPSc2Jz48c3BhbiBpZD0ncHViLWtleXdvcmQtMCc+Y3Jvc3N3YWxrPC9zcGFuPjsgPHNwYW4gaWQ9J3B1Yi1rZXl3b3JkLTEnPkN5YmVyc2VjdXJpdHkgRnJhbWV3b3JrPC9zcGFuPjsgPHNwYW4gaWQ9J3B1Yi1rZXl3b3JkLTInPkluZm9ybWF0aXZlIFJlZmVyZW5jZXM8L3NwYW4+OyA8c3BhbiBpZD0ncHViLWtleXdvcmQtMyc+RnJhbWV3b3JrIGZvciBJbXByb3ZpbmcgQ3JpdGljYWwgSW5mcmFzdHJ1Y3R1cmUgQ3liZXJzZWN1cml0eTwvc3Bhbj47IDxzcGFuIGlkPSdwdWIta2V5d29yZC00Jz5tYXBwaW5nPC9zcGFuPjsgPHNwYW4gaWQ9J3B1Yi1rZXl3b3JkLTUnPk9ubGluZSBJbmZvcm1hdGl2ZSBSZWZlcmVuY2VzPC9zcGFuPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICA8aDU+Q29udHJvbCBGYW1pbGllczwvaDU+DQogICAgICAgICAgICAgICAgPHA+DQogICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9InB1Yi1jb250cm9sLWZhbS1jb250YWluZXIiIGRhdGEtdG90YWw9IjAiPk5vbmUgc2VsZWN0ZWQ8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgIDwvcD4NCiAgICANCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTQgY29sLXNtLTEyIj4NCiAgICANCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJicy1jYWxsb3V0IGJzLWNhbGxvdXQtc3VjY2VzcyIgaWQ9InB1YnMtZG9jdW1lbnRhdGlvbiI+DQogICAgICAgICAgICAgICAgICAgIDxoND5Eb2N1bWVudGF0aW9uPC9oND4NCiAgICANCiAgICAgICAgICAgICAgICAgICAgPHA+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nPlB1YmxpY2F0aW9uOjwvc3Ryb25nPjxiciAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvQ1NSQy9tZWRpYS9QdWJsaWNhdGlvbnMvbmlzdGlyLzgyMDQvYXJjaGl2ZS8yMDE5LTA0LTI2L2RvY3VtZW50cy9OSVNULklSLjgyMDQtMjAxOTA0MjYucGRmIiBkYXRhLWlkZW50aXR5PSJmaXJzdC1saW5rLWRpc3BsYXkiIGlkPSJwdWItZG9jLTAiPjxpIGNsYXNzPSJmYSBmYS1maWxlLXBkZi1vIj48L2k+IE5JU1RJUiA4MjA0IChBcHJpbCAyMDE5KTwvYT48YnIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgIDwvcD4NCiAgICANCiAgICAgICAgICAgICAgICAgICAgPHA+DQogICAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nPlN1cHBsZW1lbnRhbCBNYXRlcmlhbDo8L3N0cm9uZz48YnIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJwdWItc3VwcC1jb250YWluZXIiIGRhdGEtdG90YWw9IjAiPk5vbmUgYXZhaWxhYmxlPC9zcGFuPjxiciAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgIDwvcD4NCiAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgIDxwPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHN0cm9uZz5SZWxhdGVkIE5JU1QgUHVibGljYXRpb25zOjwvc3Ryb25nPjxiciAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9InB1Yi1yZWxhdGVkLWNvbnRhaW5lciIgZGF0YS10b3RhbD0iMSI+DQogICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvcHVibGljYXRpb25zL2RldGFpbC93aGl0ZS1wYXBlci8yMDE4LzA0LzE2L2N5YmVyc2VjdXJpdHktZnJhbWV3b3JrLXYxMS9maW5hbCIgaWQ9InB1Yi1yZWxhdGVkLWxpbmstMCI+V2hpdGUgUGFwZXIgPC9hPjxiciAvPg0KICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+DQogICAgICAgICAgICAgICAgICAgIDwvcD4NCiAgICAgICAgICAgICAgICAgICAgDQogICAgDQogICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICA8cD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmc+RG9jdW1lbnQgSGlzdG9yeTo8L3N0cm9uZz48YnIgLz4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJwdWItaGlzdG9yeS1jb250YWluZXIiIGRhdGEtdG90YWw9IjIiPg0KICAgICAgICAgICAgICAgICAgICAgICAgMDUvMTcvMTg6IDxhIGhyZWY9Jy9wdWJsaWNhdGlvbnMvZGV0YWlsL25pc3Rpci84MjA0L2FyY2hpdmUvMjAxOC0wNS0xNycgaWQ9J3B1Yi1oaXN0b3J5LWxpbmstMCcgZGF0YS1jdXJyZW50LWRvY3VtZW50PSdmYWxzZSc+TklTVElSICA4MjA0IChEcmFmdCk8L2E+PGJyLz4wNC8yNi8xOTogPHNwYW4gaWQ9J3B1Yi1oaXN0b3J5LWxpbmstMScgZGF0YS1jdXJyZW50LWRvY3VtZW50PSd0cnVlJz5OSVNUSVIgIDgyMDQ8L3NwYW4+PGJyLz4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPC9wPg0KICAgICAgICAgICAgICAgICAgICANCiAgICANCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICANCiAgICAgICAgICAgDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYnMtY2FsbG91dCBicy1jYWxsb3V0LWRhbmdlciIgaWQ9InB1YnMtdG9waWNzIj4NCiAgICAgICAgICAgICAgICAgICAgPGg0PlRvcGljczwvaDQ+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJwdWItY2F0ZWdvcmllcy1jb250YWluZXIiIGRhdGEtdG90YWw9IjEiPg0KICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgIDxwPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmcgaWQ9InB1Yi1jYXQtMCI+QXBwbGljYXRpb25zPC9zdHJvbmc+PGJyIC8+PHNwYW4gaWQ9InB1Yi1jYXQtdG9wLWNvbnRhaW5lci0wIiBkYXRhLXRvdGFsPSIxIj48L3NwYW4+PGEgaHJlZj0nL1RvcGljcy9BcHBsaWNhdGlvbnMvY3liZXJzZWN1cml0eS1mcmFtZXdvcmsnIGlkPSdwdWItY2F0LXRvcC0wLTAnPmN5YmVyc2VjdXJpdHkgZnJhbWV3b3JrPC9hPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9wPg0KICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIA0KICAgIA0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgIA0KDQoNCiAgPC9kaXY+DQo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIvQ1NSQy9tZWRpYS9qcy9wdWJsaWNhdGlvbnMuanMiPjwvc2NyaXB0Pg0KDQogIDxkaXYgaWQ9ImZvb3Rlci1wdXNoZXIiPjwvZGl2Pg0KDQo8L2Rpdj4NCg0KPGZvb3RlciBpZD0iZm9vdGVyIj4NCjxkaXYgY2xhc3M9ImNvbnRhaW5lciI+DQoNCiAgICA8ZGl2IGNsYXNzPSJyb3ciPg0KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tNiI+DQogICAgICAgICAgICA8c3BhbiBjbGFzcz0iaGlkZGVuLXhzIj4NCiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5uaXN0LmdvdiIgdGl0bGU9Ik5hdGlvbmFsIEluc3RpdHV0ZSBvZiBTdGFuZGFyZHMgYW5kIFRlY2hub2xvZ3kiIHJlbD0iaG9tZSIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJmb290ZXItbmlzdC1sb2dvIiBpZD0iZm9vdGVyLW5pc3QtbG9nby1saW5rIj4NCiAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Ii9DU1JDL01lZGlhL2ltYWdlcy9sb2dvX3Jldi5wbmciIGFsdD0iTmF0aW9uYWwgSW5zdGl0dXRlIG9mIFN0YW5kYXJkcyBhbmQgVGVjaG5vbG9neSBsb2dvIiBpZD0iZm9vdGVyLW5pc3QtbG9nbyIvPg0KICAgICAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgIDwvc3Bhbj4NCg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93IGZvb3Rlci1jb250YWN0LWNvbnRhaW5lciI+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTEyIiBpZD0iZm9vdGVyLWFkZHJlc3MiPg0KICAgICAgICAgICAgICAgICAgICA8c3Ryb25nPkhFQURRVUFSVEVSUzwvc3Ryb25nPjxicj4NCiAgICAgICAgICAgICAgICAgICAgMTAwIEJ1cmVhdSBEcml2ZTxicj4NCiAgICAgICAgICAgICAgICAgICAgR2FpdGhlcnNidXJnLCBNRCAyMDg5OQ0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgIDwvZGl2Pg0KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tNiI+DQogICAgICAgICAgICA8dWwgY2xhc3M9InNvY2lhbC1saXN0IHRleHQtcmlnaHQiIHN0eWxlPSJkaXNwbGF5OiBibG9jazsiPg0KICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iZmllbGQtaXRlbSBzZXJ2aWNlLXR3aXR0ZXIgbGlzdC1ob3JpeiI+DQogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vTklTVEN5YmVyIiBjbGFzcz0ic29jaWFsLWJ0biBzb2NpYWwtYnRuLS1sYXJnZSBleHRsaW5rIGV4dCIgaWQ9ImZvb3Rlci1zb2NpYWwtdHdpdHRlci1saW5rIj4NCiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhIGZhLXR3aXR0ZXIgZmEtZnciPjxzcGFuIGNsYXNzPSJlbGVtZW50LWludmlzaWJsZSI+dHdpdHRlcjwvc3Bhbj48L2k+PHNwYW4gY2xhc3M9ImV4dCI+PHNwYW4gY2xhc3M9ImVsZW1lbnQtaW52aXNpYmxlIj4gKGxpbmsgaXMgZXh0ZXJuYWwpPC9zcGFuPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICA8L2E+DQogICAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImZpZWxkLWl0ZW0gc2VydmljZS1mYWNlYm9vayBsaXN0LWhvcml6Ij4NCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL05JU1QiIGNsYXNzPSJzb2NpYWwtYnRuIHNvY2lhbC1idG4tLWxhcmdlIGV4dGxpbmsgZXh0IiBpZD0iZm9vdGVyLXNvY2lhbC1mYWNlYm9vay1saW5rIj4NCiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhIGZhLWZhY2Vib29rIGZhLWZ3Ij48c3BhbiBjbGFzcz0iZWxlbWVudC1pbnZpc2libGUiPmZhY2Vib29rPC9zcGFuPjwvaT48c3BhbiBjbGFzcz0iZXh0Ij48c3BhbiBjbGFzcz0iZWxlbWVudC1pbnZpc2libGUiPiAobGluayBpcyBleHRlcm5hbCk8L3NwYW4+PC9zcGFuPjwvYT4NCg0KICAgICAgICAgICAgICAgIDwvbGk+DQogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJmaWVsZC1pdGVtIHNlcnZpY2UtbGlua2VkaW4gbGlzdC1ob3JpeiI+DQogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9jb21wYW55L25pc3QiIGNsYXNzPSJzb2NpYWwtYnRuIHNvY2lhbC1idG4tLWxhcmdlIGV4dGxpbmsgZXh0IiBpZD0iZm9vdGVyLXNvY2lhbC1saW5rZWRpbi1saW5rIj4NCiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhIGZhLWxpbmtlZGluIGZhLWZ3Ij48c3BhbiBjbGFzcz0iZWxlbWVudC1pbnZpc2libGUiPmxpbmtlZGluPC9zcGFuPjwvaT48c3BhbiBjbGFzcz0iZXh0Ij48c3BhbiBjbGFzcz0iZWxlbWVudC1pbnZpc2libGUiPiAobGluayBpcyBleHRlcm5hbCk8L3NwYW4+PC9zcGFuPjwvYT4NCg0KICAgICAgICAgICAgICAgIDwvbGk+DQogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJmaWVsZC1pdGVtIHNlcnZpY2UtaW5zdGFncmFtIGxpc3QtaG9yaXoiPg0KCQkJCQk8YSBocmVmPSJodHRwczovL3d3dy5pbnN0YWdyYW0uY29tL3VzbmlzdGdvdi8iIGNsYXNzPSJzb2NpYWwtYnRuIHNvY2lhbC1idG4tLWxhcmdlIGV4dGxpbmsgZXh0IiBpZD0iZm9vdGVyLXNvY2lhbC1pbnN0YWdyYW0tbGluayI+DQoJCQkJCQk8aSBjbGFzcz0iZmEgZmEtaW5zdGFncmFtIGZhLWZ3Ij48c3BhbiBjbGFzcz0iZWxlbWVudC1pbnZpc2libGUiPmluc3RhZ3JhbTwvc3Bhbj48L2k+DQoJCQkJCQk8c3BhbiBjbGFzcz0iZXh0Ij48c3BhbiBjbGFzcz0iZWxlbWVudC1pbnZpc2libGUiPiAobGluayBpcyBleHRlcm5hbCk8L3NwYW4+PC9zcGFuPjwvYT4NCg0KICAgICAgICAgICAgICAgIDwvbGk+DQogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJmaWVsZC1pdGVtIHNlcnZpY2UteW91dHViZSBsaXN0LWhvcml6Ij4NCiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cueW91dHViZS5jb20vdXNlci9VU05JU1RHT1YiIGNsYXNzPSJzb2NpYWwtYnRuIHNvY2lhbC1idG4tLWxhcmdlIGV4dGxpbmsgZXh0IiBpZD0iZm9vdGVyLXNvY2lhbC15b3V0dWJlLWxpbmsiPg0KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEteW91dHViZSBmYS1mdyI+PHNwYW4gY2xhc3M9ImVsZW1lbnQtaW52aXNpYmxlIj55b3V0dWJlPC9zcGFuPjwvaT48c3BhbiBjbGFzcz0iZXh0Ij48c3BhbiBjbGFzcz0iZWxlbWVudC1pbnZpc2libGUiPiAobGluayBpcyBleHRlcm5hbCk8L3NwYW4+PC9zcGFuPjwvYT4NCg0KICAgICAgICAgICAgICAgIDwvbGk+DQogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJmaWVsZC1pdGVtIHNlcnZpY2UtcnNzIGxpc3QtaG9yaXoiPg0KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5uaXN0Lmdvdi9uZXdzLWV2ZW50cy9uaXN0LXJzcy1mZWVkcyIgY2xhc3M9InNvY2lhbC1idG4gc29jaWFsLWJ0bi0tbGFyZ2UgZXh0bGluayIgaWQ9ImZvb3Rlci1zb2NpYWwtcnNzLWxpbmsiPg0KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtcnNzIGZhLWZ3Ij48c3BhbiBjbGFzcz0iZWxlbWVudC1pbnZpc2libGUiPnJzczwvc3Bhbj48L2k+PC9hPg0KDQogICAgICAgICAgICAgICAgPC9saT4NCiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImZpZWxkLWl0ZW0gc2VydmljZS1nb3ZkZWxpdmVyeSBsaXN0LWhvcml6IGxhc3QiPg0KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3B1YmxpYy5nb3ZkZWxpdmVyeS5jb20vYWNjb3VudHMvVVNOSVNUL3N1YnNjcmliZXIvbmV3P3FzcD1VU05JU1RfMyIgY2xhc3M9InNvY2lhbC1idG4gc29jaWFsLWJ0bi0tbGFyZ2UgZXh0bGluayBleHQiIHRpdGxlPSJTdWJzY3JpYmUgdG8gQ1NSQyBhbmQgcHVibGljYXRpb24gdXBkYXRlcywgYW5kIG90aGVyIE5JU1QgY3liZXJzZWN1cml0eSBuZXdzIiBpZD0iZm9vdGVyLXNvY2lhbC1nb3ZkZWxpdmVyeS1saW5rIj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1lbnZlbG9wZSBmYS1mdyI+PHNwYW4gY2xhc3M9ImVsZW1lbnQtaW52aXNpYmxlIj5nb3ZkZWxpdmVyeTwvc3Bhbj48L2k+PHNwYW4gY2xhc3M9ImV4dCI+PHNwYW4gY2xhc3M9ImVsZW1lbnQtaW52aXNpYmxlIj4gKGxpbmsgaXMgZXh0ZXJuYWwpPC9zcGFuPjwvc3Bhbj4NCiAgICAgICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgICAgIDwvbGk+DQogICAgICAgICAgICA8L3VsPg0KICAgICAgICAgICAgPHAgY2xhc3M9InRleHQtcmlnaHQiPg0KICAgICAgICAgICAgICAgIFdhbnQgdXBkYXRlcyBhYm91dCBDU1JDIGFuZCBvdXIgcHVibGljYXRpb25zPyANCiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3B1YmxpYy5nb3ZkZWxpdmVyeS5jb20vYWNjb3VudHMvVVNOSVNUL3N1YnNjcmliZXIvbmV3P3FzcD1VU05JU1RfMyIgY2xhc3M9ImJ0biBidG4tbGcgYnRuLWluZm8iIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjMTI2NTljIWltcG9ydGFudDsgYm9yZGVyLWNvbG9yOiAjMTI2NTljIWltcG9ydGFudDsiIGlkPSJmb290ZXItc3Vic2NyaWJlLWxpbmsiPlN1YnNjcmliZTwvYT4NCiAgICAgICAgICAgIDwvcD4NCiAgICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQogICAgPGRpdiBjbGFzcz0icm93IGhpZGRlbi1zbSBoaWRkZW4tbWQgaGlkZGVuLWxnIj4NCiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTEyIj4NCiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5uaXN0LmdvdiIgdGl0bGU9Ik5hdGlvbmFsIEluc3RpdHV0ZSBvZiBTdGFuZGFyZHMgYW5kIFRlY2hub2xvZ3kiIHJlbD0iaG9tZSIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJmb290ZXItbmlzdC1sb2dvIiBpZD0iZm9vdGVyLWJvdHRvbS1uaXN0LWxvZ28tbGluayI+DQogICAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSIvQ1NSQy9NZWRpYS9pbWFnZXMvbG9nb19yZXYucG5nIiBhbHQ9Ik5hdGlvbmFsIEluc3RpdHV0ZSBvZiBTdGFuZGFyZHMgYW5kIFRlY2hub2xvZ3kgbG9nbyIgaWQ9ImZvb3Rlci1ib3R0b20tbmlzdC1sb2dvIi8+DQogICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCg0KICAgIDxkaXYgY2xhc3M9InJvdyI+DQogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS0xMiI+DQogICAgICAgICAgICA8cD4NCiAgICAgICAgICAgICAgICA8YSBocmVmPSJtYWlsdG86d2VibWFzdGVyLWNzcmNAbmlzdC5nb3Y/c3ViamVjdD1DU1JDIElucXVpcnkiIGlkPSJmb290ZXItd2VibWFzdGVyLWxpbmsiPldlYm1hc3RlcjwvYT4gfCANCiAgICAgICAgICAgICAgICA8YSBocmVmPSIvYWJvdXQvY29udGFjdCIgaWQ9ImZvb3Rlci1jb250YWN0LXVzLWxpbmsiPkNvbnRhY3QgVXM8L2E+IHwNCiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5uaXN0Lmdvdi9hYm91dC1uaXN0L291ci1vcmdhbml6YXRpb24iIHN0eWxlPSJkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IiBpZD0iZm9vdGVyLW9yZy1saW5rIj5PdXIgT3RoZXIgT2ZmaWNlczwvYT4NCiAgICAgICAgICAgIDwvcD4NCiAgICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQoNCiAgICA8ZGl2IGlkPSJmb290ZXItbmF2LW1lbnUiIGNsYXNzPSJyb3ciIHJvbGU9Im5hdmlnYXRpb24iPg0KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtOCBjb2wtc20tNiBjb2wteHMtMTIgY29sLXh4cy0xMiI+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPg0KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC00Ij4NCiAgICAgICAgICAgICAgICAgICAgPHA+DQogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvcHJvamVjdHMiPlBST0pFQ1RTPC9hPg0KICAgICAgICAgICAgICAgICAgICA8L3A+DQogICAgICAgICAgICAgICAgICAgIDxwPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL3B1YmxpY2F0aW9ucyI+UFVCTElDQVRJT05TPC9hPjxici8+DQogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvcHVibGljYXRpb25zL2RyYWZ0LXB1YnMiPkRyYWZ0IFB1YnM8L2E+PGJyLz4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9wdWJsaWNhdGlvbnMvZmluYWwtcHVicyI+RmluYWwgUHViczwvYT48YnIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL3B1YmxpY2F0aW9ucy9maXBzIj5GSVBTPC9hPjxici8+DQogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvcHVibGljYXRpb25zL3NwIj5TcGVjaWFsIFB1YmxpY2F0aW9ucyAoU1BzKTwvYT48YnIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL3B1YmxpY2F0aW9ucy9uaXN0aXIiPk5JU1RJUnM8L2E+PGJyLz4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9wdWJsaWNhdGlvbnMvaXRsLWJ1bGxldGluIj5JVEwgQnVsbGV0aW5zPC9hPjxici8+DQogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvcHVibGljYXRpb25zL3doaXRlLXBhcGVyIj5XaGl0ZSBQYXBlcnM8L2E+PGJyLz4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9wdWJsaWNhdGlvbnMvam91cm5hbC1hcnRpY2xlIj5Kb3VybmFsIEFydGljbGVzPC9hPjxici8+DQogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvcHVibGljYXRpb25zL2NvbmZlcmVuY2UtcGFwZXIiPkNvbmZlcmVuY2UgUGFwZXJzPC9hPjxici8+DQogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvcHVibGljYXRpb25zL2Jvb2siPkJvb2tzPC9hPg0KICAgICAgICAgICAgICAgICAgICA8L3A+DQogICAgICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTQiPg0KICAgICAgICAgICAgICAgICAgICA8cD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii90b3BpY3MiPlRPUElDUzwvYT48YnIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL1RvcGljcy9TZWN1cml0eS1hbmQtUHJpdmFjeSI+U2VjdXJpdHkgJmFtcDsgUHJpdmFjeTwvYT48YnIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL1RvcGljcy9BcHBsaWNhdGlvbnMiPkFwcGxpY2F0aW9uczwvYT48YnIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL1RvcGljcy9UZWNobm9sb2dpZXMiPlRlY2hub2xvZ2llczwvYT48YnIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL1RvcGljcy9TZWN0b3JzIj5TZWN0b3JzPC9hPjxici8+DQogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvVG9waWNzL0xhd3MtYW5kLVJlZ3VsYXRpb25zIj5MYXdzICZhbXA7IFJlZ3VsYXRpb25zPC9hPjxici8+DQogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvVG9waWNzL0FjdGl2aXRpZXMtYW5kLVByb2R1Y3RzIj5BY3Rpdml0aWVzICZhbXA7IFByb2R1Y3RzPC9hPg0KICAgICAgICAgICAgICAgICAgICA8L3A+DQogICAgICAgICAgICAgICAgICAgIDxwPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL25ld3MiPk5FV1MgJmFtcDsgVVBEQVRFUzwvYT4NCiAgICAgICAgICAgICAgICAgICAgPC9wPg0KICAgICAgICAgICAgICAgICAgICA8cD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9ldmVudHMiPkVWRU5UUzwvYT4NCiAgICAgICAgICAgICAgICAgICAgPC9wPg0KICAgICAgICAgICAgICAgICAgICA8cD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9nbG9zc2FyeSI+R0xPU1NBUlk8L2E+DQogICAgICAgICAgICAgICAgICAgIDwvcD4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCI+DQogICAgICAgICAgICAgICAgICAgIDxwPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2Fib3V0Ij5BQk9VVCBDU1JDPC9hPjxici8+DQogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvYWJvdXQiPkNvbXB1dGVyIFNlY3VyaXR5IERpdmlzaW9uPC9hPjxici8+DQogICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvYWJvdXQiPkFwcGxpZWQgQ3liZXJzZWN1cml0eSBEaXZpc2lvbjwvYT48YnIvPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2NvbnRhY3QiPkNvbnRhY3QgVXM8L2E+DQogICAgICAgICAgICAgICAgICAgIDwvcD4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgPC9kaXY+DQogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC00IGNvbC1zbS02IGNvbC14cy0xMiBjb2wteHhzLTEyIj4NCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHVsbC1yaWdodCB0ZXh0LXJpZ2h0Ij4NCiAgICAgICAgICAgICAgICAgICAgPHA+PHN0cm9uZyBpZD0iZm9vdGVyLWluZm8taXRsIj5JbmZvcm1hdGlvbiBUZWNobm9sb2d5IExhYm9yYXRvcnk8c3BhbiBjbGFzcz0iaGlkZGVuLXhzIj4gKElUTCk8L3NwYW4+PC9zdHJvbmc+PC9wPg0KICAgICAgICAgICAgICAgICAgICA8c3Ryb25nIGlkPSJmb290ZXItaW5mby1jc2QiPkNvbXB1dGVyIFNlY3VyaXR5IERpdmlzaW9uPHNwYW4gY2xhc3M9ImhpZGRlbi14cyI+IChDU0QpPC9zcGFuPjwvc3Ryb25nPjxici8+DQogICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJmb290ZXItaW5mby1jc2QtcGhvbmUiPlRFTDogMzAxLjk3NS44NDQzPC9zcGFuPjxici8+DQogICAgICAgICAgICAgICAgICAgIDxzdHJvbmcgaWQ9ImZvb3Rlci1pbmZvLWFjZCI+QXBwbGllZCBDeWJlcnNlY3VyaXR5IERpdmlzaW9uPHNwYW4gY2xhc3M9ImhpZGRlbi14cyI+IChBQ0QpPC9zcGFuPjwvc3Ryb25nPg0KICAgICAgICAgICAgICAgICAgICA8YnIgLz48YnIgLz48YnIgLz4NCiAgICAgICAgICAgICAgICAgICAgQ29udGFjdCBDU1JDIFdlYm1hc3RlcjogPGEgaHJlZj0ibWFpbHRvOndlYm1hc3Rlci1jc3JjQG5pc3QuZ292P3N1YmplY3Q9Q1NSQyBJbnF1aXJ5IiBzdHlsZT0iZGlzcGxheTogaW5saW5lLWJsb2NrOyIgIGlkPSJmb290ZXItaW5mby13ZWJtYXN0ZXItbGluayI+d2VibWFzdGVyLWNzcmNAbmlzdC5nb3Y8L2E+DQogICAgICAgICAgICAgICAgPC9zcGFuPg0KICAgICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCg0KICAgIDxkaXYgY2xhc3M9InJvdyI+DQogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1sZy0xMiBmb290ZXItYm90dG9tLWxpbmtzLWNvbnRhaW5lciIgaWQ9ImZvb3Rlci1ib3R0b20tbGlua3MtY29udGFpbmVyIj4NCiAgICAgICAgICAgIDxwPg0KICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy5uaXN0Lmdvdi9wcml2YWN5LXBvbGljeSI+UHJpdmFjeSBTdGF0ZW1lbnQ8L2E+IHwNCiAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cubmlzdC5nb3YvcHJpdmFjeS1wb2xpY3kjcHJpdnBvbGljeSI+UHJpdmFjeSBQb2xpY3k8L2E+IHwNCiAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cubmlzdC5nb3YvcHJpdmFjeS1wb2xpY3kjc2Vjbm90Ij5TZWN1cml0eSBOb3RpY2U8L2E+IHwNCiAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cubmlzdC5nb3YvcHJpdmFjeS1wb2xpY3kjYWNjZXNzdGF0ZSI+QWNjZXNzaWJpbGl0eSBTdGF0ZW1lbnQ8L2E+IHwNCiAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cubmlzdC5nb3YvcHJpdmFjeSI+TklTVCBQcml2YWN5IFByb2dyYW08L2E+IHwNCiAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cubmlzdC5nb3Yvbm8tZmVhci1hY3QtcG9saWN5Ij5ObyBGZWFyIEFjdCBQb2xpY3k8L2E+DQogICAgICAgICAgICA8L3A+DQogICAgICAgICAgICA8cD4NCiAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cubmlzdC5nb3YvZGlzY2xhaW1lciI+RGlzY2xhaW1lcjwvYT4gfA0KICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy5uaXN0Lmdvdi9vZmZpY2UtZGlyZWN0b3IvZnJlZWRvbS1pbmZvcm1hdGlvbi1hY3QiPkZPSUE8L2E+IHwNCiAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cubmlzdC5nb3YvZW52aXJvbm1lbnRhbC1wb2xpY3ktc3RhdGVtZW50Ij5FbnZpcm9ubWVudGFsIFBvbGljeSBTdGF0ZW1lbnQ8L2E+IHwNCiAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cubmlzdC5nb3YvcHJpdmFjeS1wb2xpY3kjY29va2llIj5Db29raWUgRGlzY2xhaW1lcjwvYT4gfA0KICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy5uaXN0Lmdvdi9zdW1tYXJ5LXJlcG9ydC1zY2llbnRpZmljLWludGVncml0eSI+U2NpZW50aWZpYyBJbnRlZ3JpdHkgU3VtbWFyeTwvYT4gfA0KICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy5uaXN0Lmdvdi9uaXN0LWluZm9ybWF0aW9uLXF1YWxpdHktc3RhbmRhcmRzIj5OSVNUIEluZm9ybWF0aW9uIFF1YWxpdHkgU3RhbmRhcmRzPC9hPg0KICAgICAgICAgICAgPC9wPg0KICAgICAgICAgICAgPHA+DQogICAgICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vd3d3LnVzYS5nb3YvYnVzaW5lc3MiPkJ1c2luZXNzIFVTQTwvYT4gfA0KICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy5jb21tZXJjZS5nb3YvIj5Db21tZXJjZS5nb3Y8L2E+IHwNCiAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cuaGVhbHRoY2FyZS5nb3YvIj5IZWFsdGhjYXJlLmdvdjwvYT4gfA0KICAgICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwOi8vd3d3LnNjaWVuY2UuZ292LyI+U2NpZW5jZS5nb3Y8L2E+IHwNCiAgICAgICAgICAgICAgICA8YSB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cDovL3d3dy51c2EuZ292LyI+VVNBLmdvdjwvYT4NCiAgICAgICAgICAgIDwvcD4NCiAgICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQo8L2Rpdj4NCjwvZm9vdGVyPg0KDQo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+DQogKGZ1bmN0aW9uKCkgew0KICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2h0bWwnKVswXS5zZXRBdHRyaWJ1dGUoJ2xhbmcnLCAnZW4nKTsNCiAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdodG1sJylbMF0uc2V0QXR0cmlidXRlKCd4bWw6bGFuZycsICdlbicpDQp9KSgpOyANCjwvc2NyaXB0Pg0KDQogICAgDQogICAgPC9mb3JtPg0KPC9ib2R5Pg0KPC9odG1sPg0K
    http_version: 
  recorded_at: Wed, 15 Jan 2020 20:06:48 GMT
- request:
    method: get
    uri: https://csrc.nist.gov/publications/detail/nistir/8204/final
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - csrc.nist.gov
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache, no-store, must-revalidate
      Pragma:
      - no-cache
      Content-Type:
      - text/html; charset=utf-8
      Expires:
      - "-1"
      Server:
      - Microsoft-IIS/8.5
      Set-Cookie:
      - ASP.NET_SessionId=lla3uejmdqnwu2lx3htk5f1i; path=/; secure; HttpOnly; SameSite=Lax
      - CMSCsrfCookie=TgWUXoo+Tmlah/ff6E1yvJ8BhRumsLIsXVLI594w; path=/; secure; HttpOnly
      - CMSPreferredCulture=en-US; path=/; HttpOnly; Secure
      X-Frame-Options:
      - SAMEORIGIN
      X-Ua-Compatible:
      - IE=Edge
      X-Aspnet-Version:
      - 4.0.30319
      Content-Security-Policy:
      - frame-ancestors 'self';
      Date:
      - Wed, 15 Jan 2020 20:06:48 GMT
      Content-Length:
      - '40552'
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 15 Jan 2020 20:06:48 GMT
- request:
    method: get
    uri: https://csrc.nist.gov/publications/detail/nistir/8204/archive/2019-05-31
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - csrc.nist.gov
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache, no-store, must-revalidate
      Pragma:
      - no-cache
      Content-Type:
      - text/html; charset=utf-8
      Expires:
      - "-1"
      Server:
      - Microsoft-IIS/8.5
      Set-Cookie:
      - ASP.NET_SessionId=wiibrm5ukc5z5vml21rkhdjy; path=/; secure; HttpOnly; SameSite=Lax
      - CMSCsrfCookie=7Rrez98PltzTuhhaMT9oPSwOwb87uaIwV4YQTlOF; path=/; secure; HttpOnly
      - CMSPreferredCulture=en-US; path=/; HttpOnly; Secure
      X-Frame-Options:
      - SAMEORIGIN
      X-Ua-Compatible:
      - IE=Edge
      X-Aspnet-Version:
      - 4.0.30319
      Content-Security-Policy:
      - frame-ancestors 'self';
      Date:
      - Wed, 15 Jan 2020 20:06:48 GMT
      Content-Length:
      - '40670'
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 15 Jan 2020 20:06:48 GMT
recorded_with: VCR 5.0.0
